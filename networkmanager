# ------------------------------------------------------------------
#
#  Copyright (C) 2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <local/tunables.d/>

profile networkmanager.NetworkManager /usr/sbin/NetworkManager {
  #include <abstractions/base>
  #include <abstractions/dbus/system-strict>
  #include <abstractions/dbus/consolekit>
  #include <abstractions/dbus/polkit>
  #include <abstractions/dbus/system-bind>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  capability kill,
  capability net_admin,
  capability net_raw,
  capability sys_ptrace,
  capability wake_alarm,
  capability net_bind_service,
  capability dac_override,
  
  # PTRACE ---------------------------------------------
  ptrace (trace) peer="networkmanager.nm-online",
  ptrace (trace) peer="nm-applet",
  ptrace (trace) peer="nm-applet.nm-connection-editor",
  ptrace (trace) peer="dhcp.dhclient",
  ptrace (trace) peer="dnsmasq",
  ptrace (trace) peer="local.home.evelauncher",
  ptrace (trace) peer="teamspeak-client-bin.teamspeak",
  ptrace (trace) peer="vokoscreen",
  
  # SIGNAL ---------------------------------------------
  signal (send) set=(term, kill) peer="dhcp.dhclient",
  signal (send) set=(term, kill) peer="dnsmasq",
  
  # DBUS -----------------------------------------------
  dbus send
	bus=system
	path="/org/freedesktop/NetworkManager{,/**}"
	interface="org.freedesktop.DBus.Properties"
	peer=(name="org.freedesktop.DBus"),
  dbus receive
	bus=system
	path="/org/freedesktop/NetworkManager{,/**}"
	interface="org.freedesktop.DBus.Properties"
	member={Get,GetAll}
	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=system
  	path="/org/freedesktop/DBus"
  	interface="org.freedesktop.DBus"
  	member={GetConnectionUnixUser,GetConnectionUnixProcessID}
  	peer=(name="org.freedesktop.DBus",label="dbus.dbus-daemon"),
  dbus send
  	bus=system
  	path="/org/freedesktop/NetworkManager{,/**}"
  	interface="org.freedesktop.NetworkManager*"
  	peer=(name="org.freedesktop.DBus"),
  dbus (send, receive)
  	bus=system
  	path="/org/freedesktop/NetworkManager{,/**}"
  	interface="org.freedesktop.NetworkManager*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  dbus (send, receive)
  	bus=system
  	path="/uk/org/thekelleys/dnsmasq"
  	interface="org.freedesktop.{NetworkManager.dnsmasq,DBus.Properties}"
  	peer=(name=":[0-9]*.[0-9]*",label="dnsmasq"),
  dbus send
  	bus=system
  	path="/org/freedesktop/ModemManager[0-9]*"
  	interface="org.freedesktop.DBus.{ObjectManager,Peer}"
  	peer=(name="{:[0-9]*.[0-9]*,org.freedesktop.ModemManager[0-9]*}",label="modemmanager.ModemManager"),
  dbus send
  	bus=system
  	path="/org/freedesktop/nm_dispatcher"
  	interface="org.freedesktop.nm_dispatcher"
  	peer=(name="{:[0-9]*.[0-9]*,org.freedesktop.nm_dispatcher}",label="networkmanager.nm-dispatcher"),
  dbus (send, receive)
  	bus=system
  	path="/fi/w[0-9]*/wpa_supplicant[0-9]**"
  	interface="{fi.w1.wpa_supplicant[0-9]*,org.freedesktop.DBus.{Properties,Introspectable}}"
  	peer=(name=":[0-9]*.[0-9]*",label="wpa_supplicant"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network packet dgram,
  network inet dgram,
  network inet6 dgram,
  network inet raw,
  network inet6 raw,
  
  # PSEUDO ---------------------------------------------
  /dev/console						rw,
  /dev/rfkill						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  /sys/bus/						r,
  /sys/class/						r,
  /sys/class/net/					r,
  /sys/class/rfkill/					r,
  /sys/devices/virtual/net/lo/{,*}			r,
  /sys/devices/pci[0-9]**/net/{,**}			r,
  /sys/devices/pci[0-9]**/usb[0-9]*/**/uevent		r,
  @{PROC}/@{pid}/stat					r,
  @{PROC}/sys/kernel/random/boot_id			r,
  @{PROC}/@{pid}/fd/					r,
  @{PROC}/@{pid}/cmdline				r,
  
  # EXECUTABLES ----------------------------------------
  /usr/sbin/NetworkManager				mr,
  /bin/arping						Px,	# Вызывается, если настроен статический адрес на интерфейсе.
  /sbin/dhclient					Px,	# dhcp.dhclient
  /usr/sbin/dnsmasq					Px,	# dnsmasq
  
  # READS/WRITES ---------------------------------------
  /etc/machine-id					r,
  /etc/resolv.conf{,.*}					rw,
  /etc/.resolv.conf.NetworkManager			rw,
  /etc/udev/udev.conf					r,
  /etc/dhcp/dhclient.conf				r,	# dhcp.dhclient
  /etc/NetworkManager/{,**}				r,
  /etc/NetworkManager/system-connections/*		w,
  /usr/share/gvfs/remote-volume-monitors/{,*.monitor}	r,
  /run/NetworkManager/{,**}				rw,
  /run/udev/data/{,*}					r,
  /run/ConsoleKit/inhibit/inhibit.*.pipe		w,
  /run/ConsoleKit/database				r,
  /run/dhclient-*.pid					rw,	# dhcp.dhclient
  /var/lib/NetworkManager/{,**}				rw,
}

profile networkmanager.nm-online /usr/bin/nm-online {
  #include <abstractions/base>
  #include <abstractions/dbus/system-strict>
  #include <abstractions/dbus/networkmanager>
  
  # CAPABILITIES ---------------------------------------
  capability sys_tty_config,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/console						rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/nm-online					mr,
}

profile networkmanager.nm-dhcp-helper /usr/libexec/nm-dhcp-helper {
  #include <abstractions/base>
  
  # NETWORK --------------------------------------------
  network inet dgram,
  network inet6 dgram,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/nm-dhcp-helper				mr,
  
  # READS/WRITES ---------------------------------------
  /run/NetworkManager/private-dhcp			rw,
}

profile networkmanager.nm-dispatcher /usr/libexec/nm-dispatcher {
  #include <abstractions/base>
  #include <abstractions/dbus/system-strict>
  #include <abstractions/dbus/system-bind>
  
  # DBUS -----------------------------------------------
  dbus receive
  	bus=system
  	path="/org/freedesktop/nm_dispatcher"
  	interface="org.freedesktop.nm_dispatcher"
  	peer=(name=":[0-9]*.[0-9]*",label="networkmanager.NetworkManager"),
  dbus send
  	bus=system
  	path="/org/freedesktop/nm_dispatcher"
  	interface="org.freedesktop.nm_dispatcher"
  	peer=(name="org.freedesktop.nm_dispatcher",label=@{profile_name}),
  
  # PSEUDO ---------------------------------------------
  @{PROC}/@{pid}/fd/					r,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/nm-dispatcher				mr,
  /etc/NetworkManager/dispatcher.d/10-openrc-status	Px,
  
  # READS/WRITES ---------------------------------------
  /etc/NetworkManager/dispatcher.d/{,*}			r,
}

profile networkmanager.10-openrc-status /etc/NetworkManager/dispatcher.d/10-openrc-status {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # PSEUDO -------------------------------------------
  /dev/tty						rw,
  
  # EXECUTABLES --------------------------------------
  /etc/NetworkManager/dispatcher.d/10-openrc-status	r,
  @{shell}						mr,
  /bin/grep						Cx,
  /sbin/rc-service					Px,
  /usr/bin/nm-online					Px,
  
  profile grep /bin/grep {
    #include <abstractions/base>
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
  }
}

profile networkmanager.NetworkManager.init.d /etc/init.d/NetworkManager {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  # PSEUDO ---------------------------------------------
  /sys/fs/cgroup/openrc/NetworkManager/tasks		w,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  /bin/mkdir						Cx,
  /usr/bin/nm-online					Px,
  /usr/sbin/NetworkManager				Px,
  /etc/init.d/dnsmasq					Px,
  /etc/init.d/netmount					Px,
  /etc/init.d/tor					Px,
  /etc/init.d/suricata					Px,
  /lib{,32,64}/rc/sbin/mark_service_inactive		Px,
  
  # READS/WRITES ---------------------------------------
  /etc/{conf,init}.d/NetworkManager			r,
  /run/NetworkManager/NetworkManager.pid		r,
  
  profile shell @{shell} {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    #include <abstractions/openrc-shell>
  }
  
  profile mkdir /bin/mkdir {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/console					rw,
    /dev/pts/[0-9]*					rw,
    /sys/fs/cgroup/openrc/NetworkManager/		w,
    
    # EXECUTABLES --------------------------------------
    /bin/mkdir						mr,
  }
}
