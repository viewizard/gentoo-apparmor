# ------------------------------------------------------------------
#
#    Copyright (C) 2002-2009 Novell/SUSE
#    Copyright (C) 2009-2011 Canonical Ltd.
#    Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of version 2 of the GNU General Public
#    License published by the Free Software Foundation.
#
# ------------------------------------------------------------------


# (Note that the ldd profile has inlined this file; if you make
# modifications here, please consider including them in the ldd
# profile as well.)

# The __canary_death_handler function writes a time-stamped log
# message to /dev/log for logging by syslogd. So, /dev/log, timezones,
# and localisations of date should be available EVERYWHERE, so
# StackGuard, FormatGuard, etc., alerts can be properly logged.
/dev/log				w,
/dev/random				r,
/dev/urandom				r,
/etc/locale/**				r,
/etc/locale.alias			r,
/etc/localtime				r,
/usr/share/locale/{,**}			r,
/usr/share/**/locale/**			r,
/usr/share/zoneinfo/{,**}		r,
/usr/share/X11/locale/**		r,
/{,var/}run/systemd/journal/dev-log	w,

/usr/lib{,32,64}/locale/**		mr,
/usr/lib{,32,64}/gconv/*.so		mr,
/usr/lib{,32,64}/gconv/gconv-modules*	mr,

# ld.so.cache and ld are used to load shared libraries; they are best
# available everywhere
/etc/ld.so.cache			mr,
/lib{,32,64}/ld{,32,64}-*.so		mrix,
/lib{,32,64}/**/ld{,32,64}-*.so		mrix,

# we might as well allow everything to use common libraries
/lib{,32,64}/**				r,
/lib{,32,64}/lib*.so*			mr,
/lib{,32,64}/**/lib*.so*		mr,
/usr/lib{,32,64}/**			r,
/usr/lib{,32,64}/*.so*			mr,
/usr/lib{,32,64}/**/lib*.so*		mr,

# /dev/null is pretty harmless and frequently used
/dev/null				rw,
# as is /dev/zero
/dev/zero				rw,
# recent glibc uses /dev/full in preference to /dev/null for programs
# that don't have open fds at exec()
/dev/full				rw,

# cmd line and status
owner @{PROC}/@{pid}/cmdline		r,
owner @{PROC}/@{pid}/status		r,

# Sometimes used to determine kernel/user interfaces to use
@{PROC}/sys/kernel/version		r,
# Depending on which glibc routine uses this file, base may not be the
# best place -- but many profiles require it, and it is quite harmless.
@{PROC}/sys/kernel/ngroups_max		r,

# glibc's sysconf(3) routine to determine free memory, etc
@{PROC}/meminfo				r,
@{PROC}/stat				r,
@{PROC}/cpuinfo				r,
/sys/devices/system/cpu/online		r,

# glibc's *printf protections read the maps file
@{PROC}/@{pid}/maps			r,

# libgcrypt reads some flags from /proc
@{PROC}/sys/crypto/*			r,

# glibc statvfs
@{PROC}/filesystems			r,

# glibc malloc (man 5 proc)
@{PROC}/sys/vm/overcommit_memory	r,

# Allow determining the highest valid capability of the running kernel
@{PROC}/sys/kernel/cap_last_cap		r,

# Allow other processes to read our /proc entries, futexes, perf tracing and
# kcmp for now (they will need 'read' in the first place). Administrators can
# override with:
#   deny ptrace (readby) ...
##ptrace (readby),

# Allow other processes to trace us by default (they will need 'trace' in
# the first place). Administrators can override with:
#   deny ptrace (tracedby) ...
##ptrace (tracedby),

# Allow us to ptrace read ourselves
ptrace (read) peer=@{profile_name},

# Allow unconfined processes to send us signals by default
signal (receive) peer=unconfined,

# Allow us to signal ourselves
signal peer=@{profile_name},

# Checking for PID existence is quite common so add it by default for now
signal (receive, send) set=("exists"),

# Allow us to create and use abstract and anonymous sockets
unix peer=(label=@{profile_name}),

# Allow unconfined processes to us via unix sockets
unix (receive) peer=(label=unconfined),

# Allow us to create abstract and anonymous sockets
unix (create),

# Allow us to getattr, getopt, setop and shutdown on unix sockets
unix (getattr, getopt, setopt, shutdown),
