# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <tunables/global>

profile wine /usr/bin/wine {
  #include <abstractions/X>
  #include <abstractions/audio>
  #include <abstractions/base>
  #include <abstractions/fonts>
  #include <abstractions/freedesktop.org>
  #include <abstractions/nameservice>
  #include <abstractions/p11-kit>
  #include <abstractions/private-files-strict>
  #include <local/wine-custom-locations>
  
  # CAPABILITIES ---------------------------------------
  capability sys_ptrace,
  
  # UNIX -----------------------------------------------
  unix (send, receive)
  	type=stream
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  unix (send, receive)
  	type=seqpacket
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  
  # NETWORK --------------------------------------------
  network netlink raw,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC}/cpuinfo					r,
  @{PROC}/meminfo					r,
  @{PROC}/scsi/scsi					r,
  owner @{PROC}/@{pid}/mem				r,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/wine						mr,
  /usr/bin/ntlm_auth					Pxr,
  /usr/bin/wine-preloader				Px,
  /usr/bin/wineserver					Pxr,
  
  # READS/WRITES ---------------------------------------
  /usr/share/wine/**					rk,
  
  # NOISY ----------------------------------------------
  deny /						r,
}

profile wine.ntlm_auth /usr/bin/ntlm_auth {
  #include <abstractions/base>
  #include <abstractions/private-files-strict>
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/ntlm_auth					mr,
  
  # READS/WRITES ---------------------------------------
  /usr/share/samba/codepages/**				r,
}

# FIX ME! В идеале, иметь профиль на каждую программу, см.
# http://wiki.apparmor.net/index.php/AppArmorWine
profile wine.wine-preloader /usr/bin/wine-preloader {
  #include <abstractions/X>
  #include <abstractions/audio>
  #include <abstractions/base>
  #include <abstractions/fonts>
  #include <abstractions/freedesktop.org>
  #include <abstractions/nameservice>
  #include <abstractions/p11-kit>
  #include <abstractions/private-files-strict>
  #include <abstractions/X>
  #include <abstractions/dbus-strict>
  #include <abstractions/nvidia>
  #include <local/wine-custom-locations>
  
  # SIGNAL ---------------------------------------------
  signal (receive)
  	set=(usr1, quit)
  	peer="wine.wineserver",
  
  # UNIX -----------------------------------------------
  unix (send, receive)
  	type=stream
  	peer=(label="wine.wineserver"),
  unix (send, receive)
  	type=stream
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  unix (send, receive)
  	type=seqpacket
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  
  # NETWORK --------------------------------------------
  network netlink raw,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner /dev/shm/#??????				rw,
  /sys/bus/						r,
  /sys/class/						r,
  /sys/devices/system/cpu/cpu*/cpufreq/*		r,
  /sys/devices/system/cpu/cpu*/cache/index*/*		r,
  /sys/devices/system/cpu/cpufreq/policy*/{scaling_cur_freq,scaling_max_freq,cpuinfo_max_freq} r,
  /sys/devices/system/node/**				r,
  @{PROC}/{cpu,mem}info					r,
  @{PROC}/scsi/scsi					r,
  @{PROC}/@{pid}/mounts					r,
  @{PROC}/@{pid}/net/dev				r,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/wine-preloader				Pxmr,	# Все правильно, права на запуск и на mmap.
  								# Если будут отдельные профили для программ - изменить.
  /usr/bin/wine						mr,
  /usr/bin/ntlm_auth					Pxr,
  /usr/bin/wineserver					Px,
  /usr/bin/xdg-open					Px,
  
  # READS/WRITES ---------------------------------------
  /etc/mime.types					r,
  /etc/fstab						r,
  /etc/printcap						r,
  /etc/terminfo/x/xterm					r,
  /usr/lib{,32,64}/wine/*				m,
  /usr/share/wine/**					rk,
  /usr/share/icons/**					r,
  
  # USERS ----------------------------------------------
  owner @{HOME_CACHE}/winetricks/			r,
  owner @{HOME_CACHE}/winetricks/**			rw,
  
  # TEMP -----------------------------------------------
  owner /tmp/.gl*					rw,
  owner /tmp/.wine-[0-9]*/server-*-*/{,lock}		r,
  owner /tmp/.wine-[0-9]*/server-*-*/socket		rw,
  
  # NOISY ----------------------------------------------
  deny /						r,
  deny /etc/fstab					r,
  deny @{HOME}/						r,
#  deny @{HOME}/.*					w,	# 31.03.2017 @{HOME}/.Xauthority может потребоваться доступ
  deny @{HOME}/.glvnd*					w,
  deny /etc/						r,
  deny /usr/local/					r,
  deny /usr/local/lib{,32,64}/				r,
}

profile wine.wineserver /usr/bin/wineserver {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  include <abstractions/X-connection-strict>
  #include <abstractions/private-files-strict>
  #include <local/wine-custom-locations>
  
  # CAPABILITIES ---------------------------------------
  capability sys_ptrace,
  
  # SIGNAL ---------------------------------------------
  signal (send)
  	set=(usr1, quit)
  	peer="wine.wine-preloader",
  
  # UNIX -----------------------------------------------
  unix (send, receive)
  	type=stream
  	peer=(label="wine.wine-preloader"),
  unix (send, receive)
  	type=stream
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  unix (send, receive)
  	type=seqpacket
  	peer=(label="evelauncher"),				# FIX ME! Подумать, как сделать IPC, не привязываясь.
  
  # NETWORK --------------------------------------------
  network netlink raw,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner @{PROC}/@{pid}/mem				r,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/wineserver					mr,
  
  # READS/WRITES ---------------------------------------
  /etc/mime.types					r,
  /usr/share/wine/**					rk,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.local/share/icons/hicolor/**		w,
  owner @{HOME_CACHE}/winetricks/			r,
  owner @{HOME_CACHE}/winetricks/**			rw,
  
  # TEMP -----------------------------------------------
  owner /tmp/.wine-[0-9]*/				rw,
  owner /tmp/.wine-[0-9]*/server-*-*/			rw,
  owner /tmp/.wine-[0-9]*/server-*-*/{lock,socket}	rwk,
  owner /tmp/.wine-[0-9]*/server-*-*/anonmap.*		mrw,
  
  # NOISY ----------------------------------------------
  deny /						r,
  deny /media/*/					r,
  deny /mnt/*/						r,
  deny @{HOME}/						r,
  deny /dev/@{BLOCK_REAL}				r,
}

profile wine.notepad /usr/bin/notepad {
  #include <abstractions/base>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/notepad					r,
  @{shell}						mr,
  /bin/basename						Px,
  /bin/dirname						Px,
  /usr/bin/wine						Px,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.session.log				w,	# XFCE4, <abstractions/X>
}

profile wine.winecfg /usr/bin/winecfg {
  #include <abstractions/base>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/winecfg					r,
  @{shell}						mr,
  /bin/basename						Px,
  /bin/dirname						Px,
  /usr/bin/wine						Px,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.session.log				w,	# XFCE4, <abstractions/X>
}
