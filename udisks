# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <tunables/global>

profile udisks.udisksd /usr/libexec/udisks2/udisksd {
  #include <abstractions/base>
  #include <abstractions/dbus/system-strict>
  #include <abstractions/dbus/polkit>
  #include <abstractions/dbus/system-bind>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability sys_rawio,
  capability mknod,
  
  # DBUS -----------------------------------------------
  dbus send
  	bus=system
  	path="/org/freedesktop/DBus"
  	interface="org.freedesktop.DBus"
  	member=GetConnectionUnixUser
  	peer=(name="org.freedesktop.DBus",label="dbus.dbus-daemon"),
  dbus send
  	bus=system
  	path="/org/freedesktop/UDisks2/**"
  	interface="org.freedesktop.DBus.Properties"
  	member=PropertiesChanged
  	peer=(name="org.freedesktop.DBus"),
  dbus receive
  	bus=system
  	path="/org/freedesktop/UDisks2/**"
  	interface="org.freedesktop.DBus.Properties"
  	member=EnumerateDevices
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=system
  	path="/org/freedesktop/UDisks2/**"
  	interface="org.freedesktop.UDisks2.*"
  	peer=(name="org.freedesktop.DBus"),
  dbus receive
  	bus=system
  	path="/org/freedesktop/UDisks2/**"
  	interface="org.freedesktop.UDisks2.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=system
  	path="/org/freedesktop/UDisks2"
  	interface="org.freedesktop.DBus.ObjectManager"
  	member={InterfacesAdded,InterfacesRemoved}
  	peer=(name="org.freedesktop.DBus"),
  dbus receive
  	bus=system
  	path="/org/freedesktop/UDisks2"
  	interface="org.freedesktop.DBus.ObjectManager"
  	member=GetManagedObjects
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  
  # PSEUDO ---------------------------------------------
  /dev/@{BLOCK_ALL}					r,
  /sys/bus/						r,
  /sys/class/						r,
  /sys/class/block/					r,
  /sys/devices/virtual/block/@{BLOCK_VIRT}/{,**}	r,
  /sys/devices/pci[0-9]*/**/{ata,usb}[0-9]*/**/block/@{BLOCK_REAL}/{,**} r,
  /sys/devices/pci[0-9]*/**/usb[0-9]*/{,**/}{remove,uevent} rw,
  @{PROC}/@{pid}/mountinfo				r,
  @{PROC}/swaps						r,
  @{PROC}/@{pid}/fd/					r,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/udisks2/udisksd				mr,
  /bin/mount						Cx,
  /bin/umount						Cx,
  /sbin/cryptsetup					Px,
  /usr/bin/eject					Px,
  
  # READS/WRITES ---------------------------------------
  /etc/udev/udev.conf					r,
  /etc/fstab						r,
  /usr/share/gvfs/remote-volume-monitors/{,*.monitor}	r,
  /run/udisks2/{,mounted-fs*,unlocked-luks*}		rw,
  /run/udev/data/*					r,
  /run/media/{,*/,*/*/}					w,
  /media/*/						w,
  
  profile mount /bin/mount {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /sys/devices/virtual/block/@{BLOCK_VIRT}/{,**}	r,
    
    # MOUNT --------------------------------------------	# Важно! noexec - т.к. используется патч в udisks (patches portage).
    mount options=(ro, nosuid, nodev, noexec) /dev/@{BLOCK_ALL} -> /media/*/,
    mount options=(rw, nosuid, nodev, noexec) /dev/@{BLOCK_ALL} -> /media/*/,
    mount options=(ro, nosuid, nodev, noexec) /dev/@{BLOCK_ALL} -> /run/media/*/*/,	# /run/media/$USER/VolumeName/
    mount options=(rw, nosuid, nodev, noexec) /dev/@{BLOCK_ALL} -> /run/media/*/*/,	# /run/media/$USER/VolumeName/
    
    # EXECUTABLES --------------------------------------
    /bin/mount						mr,
    
    # READS/WRITES -------------------------------------
    /etc/fstab						r,
    /run/mount/utab					rw,
    /run/mount/utab.*					rwk,
  }
  
  profile umount /bin/umount {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    
    # PSEUDO -------------------------------------------
    /sys/devices/virtual/block/@{BLOCK_VIRT}/{,**}	r,
    
    # MOUNT --------------------------------------------
    umount /media/*/,
    umount /run/media/*/*/,
    
    # PSEUDO -------------------------------------------
    @{PROC}/@{pid}/mountinfo				r,
    
    # EXECUTABLES --------------------------------------
    /bin/umount						mr,
    
    # READS/WRITES -------------------------------------
    /run/mount/utab					rw,
    /run/mount/utab.*					rwk,
  }
}
