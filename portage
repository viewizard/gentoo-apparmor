# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

# ВАЖНО!
# Т.к. портадж использует специфические настройки окружение,
# необходимо использовать переключение профиля px/cx/ix, если
# есть взаимодействие с sandbox.

#include <tunables.d/>

profile portage.emerge @{PYTHON_EXEC}/emerge {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  capability chown,
  capability mknod,
  capability fsetid,
  capability setuid,
  capability setgid,
  capability fowner,
  capability sys_admin,
  capability kill,
  capability setfcap,
  
  # SIGNAL ---------------------------------------------
  signal (send) set=(term,kill) peer="portage.emerge//shell",
  signal (send) set=(term,kill) peer="portage.emerge//sandbox",
  
  # NETWORK --------------------------------------------
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # PSEUDO ---------------------------------------------
  /dev/							r,
  /dev/tty						rw,
  /dev/ptmx						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  /sys/fs/cgroup/portage/{,**}				rw,
  owner @{PROC}/@{pid}/cmdline				r,
  @{PROC}/@{pid}/fd/					r,
  @{PROC}/@{pid}/mount{s,info}				r,
  @{PROC}/sys/kernel/osrelease				r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						cx,
  /bin/stty						Px,
  /bin/mount						Cx,
  /bin/tar						ix,	# FS ACCESS!
  /sbin/ldconfig					Px,
  /usr/bin/sandbox					cx,
  /usr/bin/find						ix,	# FS ACCESS!
  /usr/bin/id						Px,
  /usr/bin/install-info					ix,	# FS ACCESS!
  /usr/bin/scanelf					ix,	# FS ACCESS!
  /usr/bin/wget						Px,
  /usr/bin/desktop-file-validate			ix,	# FS ACCESS!
  /usr/bin/rsync					ix,	# FS ACCESS!
  /usr/bin/gcc-config					Px,
  /usr/bin/free						ix,	# FS ACCESS!
  /usr/@{CHOST}/binutils-bin/*/ld			ix,	# FS ACCESS!
  
  # READS/WRITES ---------------------------------------
  /							r,
  /boot/{,**}						rw,
  /bin/{,**}						rw,
  /etc/{,**}						rw,
  /lib							w,
  /lib{,32,64}/{,**}					rw,
  /opt/{,**}						rw,
  /sbin/{,**}						rw,
  /usr/							rw,
  /usr/**						rwl,	# l - все правильно, разрешаем на /**.
  /usr/portage/distfiles/**				rwk,
  /usr/portage/packages/**				rwk,
  /run/							r,
  /var/							rw,
  /var/**						rwk,	# FIX ME! exclude "/var/log" (allow only subfolder
  								# creation and .keep* files) with {*^}/{**^},
  								# when this features will be available
  
  # AUDIT READS/WRITES ---------------------------------
  audit deny /usr/local/**				w,	# Исключаем работу с /usr/local/.
  
  # TEMP -----------------------------------------------
  /tmp/*						rwk,	# FIX ME! Потом ограничить fsuid/uid == 0 или 250.
  
  profile mount /bin/mount {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    capability dac_override,
    
    # MOUNT --------------------------------------------
    mount fstype=cgroup options=(rw, nosuid, nodev, noexec) tmpfs -> /sys/fs/cgroup/portage/,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mount						mr,
    
    # READS/WRITES -------------------------------------
    /run/mount/utab					rw,
  }
  
  profile shell @{shell} {
    #include <abstractions/base>
    #include <abstractions/python>
    #include <abstractions/nameservice>
    #include <abstractions/X-connection-strict>
    #include <abstractions/dbus/session-strict>
    #include <abstractions/dbus/gconf>
    #include <local/mount/portage.emerge.d/>
    #include <local/profile/portage.emerge.d/>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    capability chown,
    capability mknod,
    capability fowner,
    capability fsetid,
    capability setfcap,
    capability sys_admin,
    capability sys_ptrace,
    capability setuid,
    capability setgid,
    capability kill,
    
    # SIGNAL ---------------------------------------------
    signal (send) set=(term) peer="dconf.dconf-service",
    signal (send) set=(hup) peer="gconf.gconfd-2",
    
    # PTRACE -------------------------------------------
    ptrace (trace) peer="sysvinit.init",			# sysvinit
    
    # NETWORK ------------------------------------------
    network inet dgram,
    network inet6 dgram,
    network inet stream,
    network inet6 stream,
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    /dev/initctl					w,
    /sys/{,**}						r,
    @{PROC}/{,**}					r,
    @{PROC}/@{pid}/fd/[0-9]*				w,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /etc/portage/bin/**					ix,
    /bin/**						ix,
    /sbin/**						ix,
    /sbin/udevadm					Px,
    /opt/**						ix,
    /usr/bin/**						ix,
    /usr/sbin/useradd					Px,
    /usr/sbin/groupadd					Px,
    /usr/sbin/lspci					Px,
    /usr/sbin/**					ix,
    /usr/lib{,32,64,exec}/**				ix,
    /usr/@{CHOST}/**					ix,
    /lib{,32,64}/rc/sh/gendepends.sh			Px,
    /lib{,32,64}/rc/sh/migrate-to-run.sh		ix,
    /lib{,32,64}/rc/bin/*				ix,
    
    # READS/WRITES -------------------------------------
    /							r,
    /boot/						r,
    /boot/**						rw,
    /bin/						r,
    /bin/**						rw,
    /sbin/{,**}						r,
    /opt/{,**}						r,
    /etc/						r,
    /etc/**						rw,
    /etc/xml/.keep					k,
    /usr/						r,
    /usr/**						rwkl,	# l - все правильно, разрешаем на /**.
    /usr/portage/packages/**				rwk,
    /lib{,32,64}/					r,
    /lib{,32,64}/*					rwl,	# l - все правильно, разрешаем на /**.
    /lib{,32,64}/modules/@{kernel_ver}/modules.*	rw,
    /var/						r,
    /var/db/pkg/					r,
    /var/db/pkg/**					rw,
    /var/tmp/portage/					rw,
    /var/tmp/portage/**					rwk,
    /var/cache/**					rwl,	# l - все правильно, разрешаем на /**.
    /var/log/nullmailer/				w,
    /var/spool/nullmailer/{,**}				w,
    /var/lib/*/						rw,
    /var/lib/*/**					rwkl,	# l - все правильно, разрешаем на /**.
    /run/utmp						rk,
    /run/mount/utab					rw,
    /run/openrc/*					r,
    /run/openrc/deptree					w,
    /run/openrc/depconfig				w,
    /run/udev/control					rw,
    /var/spool/**					rw,
    /var/log/emerge-fetch.log				a,	# DELEGATION! portage.emerge
    
    # AUDIT READS/WRITES -------------------------------
    audit deny /usr/local/**				w,	# Исключаем работу с /usr/local/.
    
    # TEMP ---------------------------------------------
    /tmp/						r,
    owner /tmp/**					rwk,	# Исключительный случай, разрешаем полный доступ.
    /var/tmp/						r,
  }
  
  profile sandbox /usr/bin/sandbox {
    #include <abstractions/base>
    #include <abstractions/freedesktop.org>
    #include <abstractions/fonts>
    #include <abstractions/nameservice>
    #include <abstractions/X-connection-strict>
    #include <abstractions/dbus/session-strict>
    #include <local/profile/portage.emerge.d/>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    capability chown,
    capability fowner,
    capability fsetid,
    capability sys_admin,
    capability setfcap,
    capability setuid,
    capability setgid,
    capability mknod,
    capability sys_resource,
    capability sys_ptrace,
    
    # SIGNAL ---------------------------------------------
    signal (send) set=(cont) peer="portage.emerge",
    
    # PTRACE -------------------------------------------
    ptrace (trace) peer=@{profile_name},
    
    # UNIX ---------------------------------------------
    unix (bind) type=stream,					# создание тестового сокета (анонимного или обычного)
    
    # NETWORK ------------------------------------------
    network packet raw,
    network netlink raw,
    network inet dgram,
    network inet6 dgram,
    network inet stream,
    network inet6 stream,
    
    # PSEUDO -------------------------------------------
    /dev/{,**}						r,
    /dev/tty						rw,
    /dev/null						k,
    /dev/ptmx						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    owner /dev/shm/??????				rw,
    owner /dev/shm/sem.*				w,
    owner /dev/shm/parted*/{,*}				w,
    owner link subset /dev/shm/sem.*			-> /dev/shm/??????,
    /sys/{,**}						r,
    @{PROC}/{,**}					r,
    
    # EXECUTABLES ----------------------------------------
    @{shell}						mr,
    /bin/**						ix,
    /sbin/**						ix,
    /opt/**						ix,
    /lib{,32,64}/**					ix,
    /usr/bin/**						ix,
    /usr/sbin/**					ix,
    /usr/lib{,32,64,exec}/**				ix,
    /usr/share/**					ix,
    /usr/@{CHOST}/**					ix,
    
    # READS/WRITES -------------------------------------
    /							r,
    /bin/{,**}						r,
    /sbin/{,**}						r,
    /opt/{,**}						r,
    /lib{,32,64}/{,**}					r,
    /etc/{,**}						r,
    /usr/{,**}						r,
    /usr/src/@{kernel}/tools/gcc/**.so			m,	# Плагины gcc.
    /usr/portage/distfiles/{egit,git3}-src/{,**}	rw,
    link subset /usr/portage/distfiles/{egit,git3}-src/** -> /usr/portage/distfiles/{egit,git3}-src/**,
    /usr/portage/packages/{,**}				rw,
    /var/						r,
    /var/log/sandbox/sandbox-*.log			rw,
    /var/db/pkg/{,**}					r,
    /var/cache/{,**}					r,
    
    # TEMP ---------------------------------------------
    /tmp/						r,
    owner /tmp/**					rwk,	# Исключительный случай, разрешаем полный доступ.
    /tmp/portage.cron.*					w,	# DELEGATION! 00_update_portage.cron.daily	# FIX ME! UID 0,250
    /var/tmp/						r,
    /var/tmp/**						rwk,	# Исключительный случай, разрешаем полный доступ.	# FIX ME! UID 0, 250
    link subset /var/tmp/portage/**			-> /var/tmp/portage/**,
  }
}

profile portage.env-update @{PYTHON_EXEC}/env-update {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC}/@{pid}/mounts					r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  
  # READS/WRITES ---------------------------------------
  /							r,
  /etc/ld.so.conf*					rw,
  /etc/csh.env*						rw,
  /etc/profile.env*					rw,
  /etc/env.d/{,*}					r,
  /etc/portage/**					r,
  /usr/portage/**					r,
  /usr/							r,
  /usr/local/portage/**					r,
  /usr/share/portage/config/*				r,
  /var/cache/edb/mtimedb				r,
  /var/lib/portage/config				rwk,
  
  # TEMP -----------------------------------------------
  owner /tmp/??????					rw,
  owner /tmp/tmp??????					rwk,
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,
    /sbin/ldconfig					Px,
  }
}

profile portage.dispatch-conf @{PYTHON_EXEC}/dispatch-conf {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC}/@{pid}/fd/					r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Px -> portage_dispatch_conf_shell,
  audit /usr/bin/diff					Cx,	# FIX ME! audit 15.07.2017
  /usr/bin/find						Cx,
  
  # READS/WRITES ---------------------------------------
  /etc/{,**}						rw,
  /usr/portage/**					r,
  /usr/local/portage/**					r,
  /usr/share/portage/**					r,
  
  # TEMP -----------------------------------------------
  owner /tmp/dispatch-conf.*/				rw,
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
  }
}

# FIX ME! Сейчас (модуль ядра 3.6, утилита 2.11.0) не поддерживаются
# множественные вложенные профили, выносим в отдельный профиль.
profile portage_dispatch_conf_shell {
  #include <abstractions/base>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /bin/uname						Px,
  audit /usr/bin/find					Cx,	# FIX ME! audit 15.07.2017
  audit /usr/bin/diff					Cx,	# FIX ME! audit 15.07.2017
  
  # READS/WRITES ---------------------------------------
  /etc/{,**}						r,
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
  }
}

profile portage.portageq @{PYTHON_EXEC}/portageq {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC}/@{pid}/mounts					r,
  @{PROC}/@{pid}/fd/					r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  /etc/portage/{,**}					r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  /usr/share/portage/{,**}				r,
  /var/db/pkg/{,**}					r,
  /var/cache/edb/{,**}					r,
  
  # TEMP -----------------------------------------------
  /tmp/portage.cron.*					w,	# DELEGATION! 00_update_portage.cron.daily	# FIX ME! UID 0,250
  owner /tmp/Code::Blocks-*				w,	# DELEGATION! codeblocks
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,
    
    # TEMP ---------------------------------------------
    /tmp/portage.cron.*					w,	# DELEGATION! 00_update_portage.cron.daily	# FIX ME! UID 0,250
    owner /tmp/Code::Blocks-*				w,	# DELEGATION! codeblocks
  }
}

profile portage.etc-update /usr/sbin/etc-update {
  #include <abstractions/base>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/sbin/etc-update					r,
  @{shell}						mr,
  /bin/cat						Cx,
  /bin/grep						Cx,
  /bin/cut						Cx,
  /bin/rm						Cx,
  /bin/mkdir						Cx,
  /bin/chmod						Cx,
  /bin/chown						Cx,
  /bin/sed						Cx,
  /bin/sort						Cx,
  /bin/head						Cx,
  /bin/wc						Cx,
  audit /bin/mv						Cx,	# FIX ME! audit 15.07.2017
  audit /bin/readlink					Cx,	# FIX ME! audit 15.07.2017
  /usr/bin/diff						Cx,
  /usr/bin/find						Cx,
  @{PYTHON_EXEC_WRAPPER}				Cx -> portageq,
  
  # TEMP -----------------------------------------------
  owner /tmp/sh-thd.*					rw,
  owner /var/tmp/etc-update-@{pid}/{,**}		rw,
  
  profile cat /bin/cat {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # READS/WRITES -------------------------------------
    /etc/os-release					r,
    
    # TEMP ---------------------------------------------
    owner /tmp/sh-thd.*					r,
  }
  
  profile grep /bin/grep {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
  }
  
  profile cut /bin/cut {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cut						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
    
    # READS/WRITES -------------------------------------
    /etc/**						w,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/{,**}		rw,
  }
  
  profile mkdir /bin/mkdir {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mkdir						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/{,**/}		w,
  }
  
  profile chmod /bin/chmod {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chmod						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/			w,
  }
  
   profile chown /bin/chown {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chown						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/			w,
  }
  
  profile sed /bin/sed {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sed						mr,
    
    # READS/WRITES -------------------------------------
    /etc/etc-update.conf				r,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/{,**}		rw,
  }
  
  profile sort /bin/sort {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sort						mr,
  }
  
  profile head /bin/head {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/head						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/**			r,
  }
  
  profile wc /bin/wc {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/wc						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/**			r,
  }
  
  profile mv /bin/mv {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mv						mr,
  }
  
  profile readlink /bin/readlink {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/readlink					mr,
  }
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
    
    # READS/WRITES -------------------------------------
    /etc/{,**}						r,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pid}/**			r,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
    /usr/share/gnupg/					r,
  }
  
  profile portageq {
    #include <abstractions/base>
    #include <abstractions/python-exec>
    
    # EXECUTABLES --------------------------------------
    @{PYTHON_EXEC}/portageq				Px,
  }
}

profile portage.emerge-webrsync /usr/bin/emerge-webrsync {
  #include <abstractions/base>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/emerge-webrsync				r,
  @{shell}						mr,
  /bin/date						Cx,
  /bin/rm						Cx,
  /bin/cut						Cx,
  /bin/cat						Cx,
  /bin/mktemp						Cx,
  /bin/tar						Cx,
  /bin/chown						Cx,
  /bin/stty						Px,
  /usr/bin/md5sum					Cx,
  /usr/bin/xz						Cx,
  /usr/bin/stat						Cx,
  /usr/bin/rsync					Cx,
  /usr/bin/fmt						Cx,
  /usr/bin/gpg2						Px,
  /usr/bin/renice					Px,
  /usr/bin/wget						Px,
  @{PYTHON_EXEC_WRAPPER}				Cx -> portage,
  /etc/portage/bin/post_sync				Cx,
  
  # TEMP -----------------------------------------------
  owner /tmp/sh-thd.*					rw,
  owner /var/tmp/portage/webrsync-*/portage-*.md5sum	r,
  
  profile date /bin/date {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/date						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-*/{,**}			rw,	# FIX ME! UID может быть 250 (portage) или 0 (root).
  }
  
  profile cut /bin/cut {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cut						mr,
    
    # READS/WRITES -------------------------------------
    /usr/portage/metadata/timestamp.x			r,
  }
  
  profile cat /bin/cat {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # TEMP ---------------------------------------------
    owner /tmp/sh-thd.*					r,
  }
  
  profile mktemp /bin/mktemp {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mktemp						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-*/			w,
  }
  
  profile tar /bin/tar {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # CAPABILITIES -------------------------------------
    capability chown,
    capability fsetid,
    capability fowner,
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tar						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-*/**			w,	# FIX ME! UID может быть 250 (portage) или 0 (root).
  }
  
  profile chown /bin/chown {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # CAPABILITIES -------------------------------------
    capability chown,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chown						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-*/**			rw,	# FIX ME! UID может быть 250 (portage) или 0 (root).
  }
  
  profile xz /usr/bin/xz {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/xz						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-*/**		r,
  }
  
  profile md5sum /usr/bin/md5sum {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/md5sum					mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-*/**		r,
  }
  
  profile stat /usr/bin/stat {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/stat					mr,
  }
  
  profile rsync /usr/bin/rsync {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/rsync					mr,
    
    # READS/WRITES -------------------------------------
    /usr/portage/					r,
    /usr/portage/**					rw,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-*/**		r,
  }
  
  profile fmt /usr/bin/fmt {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/fmt					mr,
  }
  
  profile portage {
    #include <abstractions/base>
    #include <abstractions/python-exec>
    
    # EXECUTABLES --------------------------------------
    @{PYTHON_EXEC}/emerge				Px,
    @{PYTHON_EXEC}/portageq				Px,
  }
  
  profile post_sync /etc/portage/bin/post_sync {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /etc/portage/bin/post_sync				r,
    @{shell}						mr,
    /etc/portage/postsync.d/*				Px,	# Выполняем файлы, если у них есть профили.
    
    # READS/WRITES -------------------------------------
    /etc/portage/postsync.d/				r,
  }
}

profile portage.emaint @{PYTHON_EXEC}/emaint {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  #include <abstractions/ncurses>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  capability chown,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC}/@{pid}/fd/					r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  /usr/bin/find						Cx,
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  /etc/portage/{,**}					r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  /usr/share/portage/{,**}				r,
  /var/lib/portage/{,**}				r,
  /var/lib/gentoo/{,**}					rwk,
  /var/db/pkg/{,**}					r,
  /var/cache/edb/{,**}					r,
  
  # TEMP -----------------------------------------------
  owner /tmp/??????					rw,
  owner /tmp/tmp??????					rwk,
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,
    /usr/bin/emerge-webrsync				Px,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
  }
}

profile portage.cgroup-release-agent /usr/lib{,32,64}/portage/@{PYTHON}/cgroup-release-agent {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/lib{,32,64}/portage/@{PYTHON}/cgroup-release-agent r,
  @{shell}						mr,
  /bin/rmdir						Cx,
  
  profile rmdir /bin/rmdir {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /sys/fs/cgroup/portage/{,**}			w,
    
    # EXECUTABLES --------------------------------------
    /bin/rmdir						mr,
  }
}

profile portage.ebuild.sh /usr/lib{,32,64}/portage/@{PYTHON}/ebuild.sh {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/lib{,32,64}/portage/@{PYTHON}/ebuild.sh		r,
  @{shell}						mr,
  
  # READS/WRITES ---------------------------------------
  /usr/share/sandbox/sandbox.bashrc			r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  
  # TEMP -----------------------------------------------
  owner /tmp/ebuild-cache.*				rw,	# DELEGATION! eix
  /tmp/portage.cron.*					w,	# DELEGATION! 00_update_portage.cron.daily	# FIX ME! UID 0,250
}
