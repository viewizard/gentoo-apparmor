# ------------------------------------------------------------------
#
#  Copyright (C) 2016-2018 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

# ВАЖНО!
# Т.к. портадж использует специфические настройки окружение,
# необходимо использовать переключение профиля px/cx/ix, если
# есть взаимодействие с sandbox.

# ВАЖНО!
# Т.к. abstractions/python может содержать ограничения на запись
# файлов с байткодом (запись файлов .pyc и .pyo), нельзя её
# использовать в профиле portage.emerge (и вложенных профилях).

#include <local/tunables.d/>

profile portage.emerge @{PYTHON_EXEC}/emerge {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  capability chown,
  capability mknod,
  capability fsetid,
  capability setuid,
  capability setgid,
  capability fowner,
  capability sys_admin,
  capability kill,
  capability setfcap,
  
  # SIGNAL ---------------------------------------------
  signal (send) set=(term,kill) peer="portage.emerge//shell",
  signal (send) set=(term,kill) peer="portage.emerge//sandbox",
  signal (send) set=(term,kill) peer="portage.emerge//rsync",
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # PSEUDO ---------------------------------------------
  /dev/							r,
  /dev/tty						rw,
  /dev/ptmx						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{SYS_D}/fs/cgroup/portage/{,**}			rw,
  audit owner @{PROC_D}/@{pid}/cmdline			r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
  owner @{PROC_D}/@{pid}/fd/				r,
  owner @{PROC_D}/@{pid}/mounts				r,
  owner @{PROC_D}/@{pid}/mountinfo			r,
  @{PROC_D}/sys/kernel/osrelease			r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						cx,
  /bin/stty						Px,	# sys-apps/coreutils
  /bin/mount						Cx,	# sys-apps/util-linux
  /bin/tar						Cx,	# app-arch/tar
  /sbin/ldconfig					Px,	# sys-libs/glibc
  /usr/bin/sandbox					cx,	# sys-apps/sandbox
  /usr/bin/find						Cx,	# sys-apps/findutils
  /usr/bin/id						Px,	# sys-apps/coreutils
  /usr/bin/install-info					Px,	# sys-apps/texinfo
  /usr/bin/scanelf					Cx,	# app-misc/pax-utils
  /usr/bin/wget						Px,	# net-misc/wget
  /usr/bin/desktop-file-validate			Cx,	# dev-util/desktop-file-utils
  /usr/bin/rsync					Cx,	# net-misc/rsync
  /usr/bin/gcc-config					Px,	# sys-devel/gcc-config
  /usr/bin/free						Cx,	# sys-process/procps
  /usr/bin/@{PYTHON}{,m}				ixr,	# r - нужно для детектирования версии программами.
  /usr/@{CHOST}/binutils-bin/[0-9]*/ld			Cx,	# sys-devel/binutils
  /etc/portage/repo.postsync.d/*			Px,	# Выполняем скрипты, если у них есть профили.
  
  # READS/WRITES ---------------------------------------
  /							r,
  /boot/{,**}						rw,
  /bin/{,**}						rw,
  /etc/{,**}						rw,
  /lib							w,
  /lib{,32,64}/{,**}					rw,
  /opt/{,**}						rw,
  /sbin/{,**}						rw,
  /usr/{,**}						rw,
  /usr/{,**/}*						l,	# l - все правильно, разрешаем на /**.
  /usr/lib{,32,64}/@{PYTHON}/{,**/}*.{pyc,so}		m,
  /usr/lib{,32,64}/@{PYTHON}/lib-dynload/*.so		m,
  /usr/portage/distfiles/**				rw,
  /usr/portage/distfiles/{,**/}*			k,
  /usr/portage/packages/**				rw,
  /usr/portage/packages/{,**/}*				k,
  /run/							r,
  /var/{,**}						rw,	# IMPROVE! Исключить "/var/log" (разрешать только создание
  /var/{,**/}*						k,	# директорий и файлов .keep*) с {*^}/{**^}.
  audit deny /usr/local/**				w,	# Исключаем работу с /usr/local/.
  
  # TEMP -----------------------------------------------
  /tmp/*						rwk,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  								# IMPROVE! (?) Потом работать с xattr, чтобы ограничить только на процесс.
  
  profile mount /bin/mount {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    capability dac_override,
    
    # MOUNT --------------------------------------------
    mount fstype=cgroup options=(rw, nosuid, nodev, noexec) tmpfs -> @{SYS_D}/fs/cgroup/portage/,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mount						mr,
    
    # READS/WRITES -------------------------------------
    /run/mount/utab					rw,
  }
  
  profile tar /bin/tar flags=(complain) {			# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tar						mr,
  }
  
  profile find /usr/bin/find flags=(complain) {			# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_read_search,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
    /etc/portage/{,**}					r,
    /usr/local/portage/{,**}				r,
  }
  
  profile scanelf /usr/bin/scanelf flags=(complain) {		# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/scanelf					mr,
  }
  
  profile desktop-file-validate /usr/bin/desktop-file-validate flags=(complain) {	# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/desktop-file-validate			mr,
    
    # READS/WRITES -------------------------------------
    /var/tmp/portage/*/*/**.desktop			r,
  }
  
  profile rsync /usr/bin/rsync flags=(complain) {		# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # NETWORK ------------------------------------------
    network inet stream,
    network inet6 stream,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/rsync					mr,
    
    # READS/WRITES -------------------------------------
    /usr/portage/{,**}					rw,
    
    # TEMP ---------------------------------------------
    owner /tmp/tmp@{TMP8}				rw,
    owner /tmp/.tmp@{TMP8}.@{TMP6}			rw,
  }
  
  profile free /usr/bin/free flags=(complain) {			# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    @{PROC_D}/sys/kernel/osrelease			r,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/free					mr,
  }
  
  profile ld /usr/@{CHOST}/binutils-bin/[0-9]*/ld flags=(complain) {	# FIX ME! complain 06.10.2017
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/@{CHOST}/binutils-bin/[0-9]*/ld		mr,
  }
  
  profile shell @{shell} {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    #include <abstractions/X-connection-strict>
    #include <abstractions/dbus/session-strict>
    #include <abstractions/dbus/gconf>
    #include <local/profile_blocks/portage.emerge.shell.d/>	# В т.ч. локальные правила монтирования и размонтирования /boot.
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    capability chown,
    capability mknod,
    capability fowner,
    capability fsetid,
    capability setfcap,
    capability sys_admin,
    capability sys_ptrace,
    capability setuid,
    capability setgid,
    capability kill,
    
    # SIGNAL ---------------------------------------------
    signal (send) set=(term) peer="dconf.dconf-service",	# gnome-base/dconf
    signal (send) set=(hup) peer="gconf.gconfd-2",		# gnome-base/gconf
    
    # PTRACE -------------------------------------------
    ptrace (trace) peer="sysvinit.init",			# sys-apps/sysvinit
    
    # NETWORK ------------------------------------------
    network inet dgram,
    network inet6 dgram,
    network inet stream,
    network inet6 stream,
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    /dev/initctl					w,
    @{SYS_D}/{,**}					r,
    @{PROC_D}/{,**}					r,
    owner @{PROC_D}/@{pid}/fd/[0-9]*			w,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /etc/portage/bin/{,**/}*				ix,
    /bin/{,**/}*					ix,
    /sbin/{,**/}*					ix,
    /sbin/udevadm					Px,	# sys-fs/eudev
    /opt/{,**/}*					ix,
    /usr/bin/{,**/}*					ix,
    /usr/sbin/useradd					Px,	# sys-apps/shadow
    /usr/sbin/groupadd					Px,	# sys-apps/shadow
    /usr/sbin/lspci					Px,	# sys-apps/pciutils
    /usr/sbin/{,**/}*					ix,
    /usr/lib{,32,64,exec}/{,**/}*			ix,
    /usr/@{CHOST}/{,**/}*				ix,
    /lib{,32,64}/rc/sh/gendepends.sh			Px,	# sys-apps/openrc
    /lib{,32,64}/rc/sh/migrate-to-run.sh		ix,	# sys-apps/openrc
    /lib{,32,64}/rc/bin/*				ix,	# sys-apps/openrc
    
    # READS/WRITES -------------------------------------
    /							r,
    /boot/						r,
    /boot/**						rw,
    /bin/						r,
    /bin/**						rw,
    /sbin/						r,
    /sbin/**						rw,
    /opt/						r,
    /opt/**						rw,
    /etc/						r,
    /etc/**						rw,
    /etc/{,**/}*					k,
    /usr/						r,
    /usr/**						rw,
    /usr/{,**/}*					kl,	# l - все правильно, разрешаем на /**.
    /usr/lib{,32,64}/@{PYTHON}/{,**/}*.{pyc,so}		m,
    /usr/lib{,32,64}/@{PYTHON}/lib-dynload/*.so		m,
    /usr/portage/packages/**				rw,
    /usr/portage/packages/{,**/}*			k,
    /lib{,32,64}/					r,
    /lib{,32,64}/*					rwl,	# l - все правильно, разрешаем на /**.
    /lib{,32,64}/modules/@{kernel_ver}/modules.*	rw,
    /var/						r,
    /var/db/						r,
    /var/db/**						rw,
    /var/tmp/portage/{,**}				rw,
    /var/tmp/portage/{,**/}*				k,
    /var/cache/**					rw,
    /var/cache/{,**/}*					l,	# l - все правильно, разрешаем на /**.
    /var/log/nullmailer/				w,	# mail-mta/nullmailer
    /var/spool/nullmailer/{,**}				w,	# mail-mta/nullmailer
    /var/lib/**						rw,
    /var/lib/**/*					kl,	# l - все правильно, разрешаем на /**.
    /run/utmp						rk,
    /run/mount/utab					rw,
    /run/openrc/*					r,	# sys-apps/openrc
    /run/openrc/deptree					w,	# sys-apps/openrc
    /run/openrc/depconfig				w,	# sys-apps/openrc
    /run/udev/control					rw,
    /var/spool/**					rw,
    /var/log/emerge-fetch.log				a,	# DELEGATION! portage.emerge
    audit deny /usr/local/**				w,	# Исключаем работу с /usr/local/.
    
    # TEMP ---------------------------------------------
    /tmp/						r,
    owner /tmp/**					rw,	# Исключительный случай, разрешаем полный доступ.
    owner /tmp/{,**/}*					k,	# Исключительный случай, разрешаем полный доступ.
    								# IMPROVE! (?) Потом работать с xattr, чтобы ограничить только на процесс.
    /var/tmp/						r,
  }
  
  profile sandbox /usr/bin/sandbox {
    #include <abstractions/base>
    #include <abstractions/freedesktop.org>
    #include <abstractions/fonts>
    #include <abstractions/nameservice>
    #include <abstractions/X-connection-strict>
    #include <abstractions/dbus/session-strict>
    #include <local/profile_blocks/portage.emerge.sandbox.d/>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    capability chown,
    capability fowner,
    capability fsetid,
    capability sys_admin,
    capability setfcap,
    capability setuid,
    capability setgid,
    capability mknod,
    capability sys_resource,
    capability sys_ptrace,
    
    # SIGNAL ---------------------------------------------
    signal (send) set=(cont) peer="portage.emerge",
    
    # PTRACE -------------------------------------------
    ptrace (trace) peer=@{profile_name},
    
    # UNIX ---------------------------------------------
    unix (bind) type=stream,					# создание тестового сокета (анонимного или обычного)
    
    # NETWORK ------------------------------------------
    network packet raw,
    network netlink raw,
    network inet dgram,
    network inet6 dgram,
    network inet stream,
    network inet6 stream,
    
    # PSEUDO -------------------------------------------
    /dev/{,**}						r,
    /dev/tty						rw,
    /dev/null						k,
    /dev/ptmx						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    /dev/shm/sem.auto*					rw,
    owner /dev/shm/@{TMP6}				rw,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
    owner /dev/shm/sem.*-*				w,	# * - вида mp25561-1694533520001241164, где mp25561 привязано к
    								# pid-у процесса, * - только цифры, кол-во может быть различным
    								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
    owner /dev/shm/parted*/{,*}				w,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
    owner link subset /dev/shm/sem.*			-> /dev/shm/@{TMP6},
    @{SYS_D}/{,**}					r,
    @{PROC_D}/{,**}					r,
    
    # EXECUTABLES ----------------------------------------
    @{shell}						mr,
    /bin/{,**/}*					ix,
    /sbin/{,**/}*					ix,
    /opt/{,**/}*					ix,
    /lib{,32,64}/{,**/}*				ix,
    /usr/bin/{,**/}*					ix,
    /usr/sbin/{,**/}*					ix,
    /usr/lib{,32,64,exec}/{,**/}*			ix,
    /usr/share/{,**/}*					ix,
    /usr/@{CHOST}/{,**/}*				ix,
    
    # READS/WRITES -------------------------------------
    /							r,
    /bin/{,**}						r,
    /sbin/{,**}						r,
    /opt/{,**}						r,
    /lib{,32,64}/{,**}					r,
    /etc/{,**}						r,
    /usr/{,**}						r,
    /usr/src/@{kernel}/tools/gcc/**.so			m,	# sys-kernel/gentoo-sources, плагины gcc
    /usr/portage/distfiles/{egit,git3}-src/{,**}	rw,
    link subset /usr/portage/distfiles/{egit,git3}-src/{,**/}* -> /usr/portage/distfiles/{egit,git3}-src/{,**/}*,
    /usr/portage/packages/{,**}				rw,
    /usr/share/applications/{,**}			rw,
    /usr/share/icons/{,**}				rw,
    /usr/share/mime/{,**}				rw,
    /var/						r,
    /var/log/sandbox/sandbox-*.log			rw,
    /var/db/pkg/{,**}					r,
    /var/cache/{,**}					r,
    
    # TEMP ---------------------------------------------
    /tmp/						r,
    owner /tmp/**					rw,	# Исключительный случай, разрешаем полный доступ.
    owner /tmp/{,**/}*					k,	# Исключительный случай, разрешаем полный доступ.
    								# IMPROVE! (?) Потом работать с xattr, чтобы ограничить только на процесс.
    /tmp/portage.cron.@{TMP6}				w,	# DELEGATION! 00_update_portage.cron.daily
    								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
    /var/tmp/						r,
    /var/tmp/**						rw,	# Исключительный случай, разрешаем полный доступ.
    								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
    /var/tmp/{,**/}*					k,	# Исключительный случай, разрешаем полный доступ.
    								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
    								# IMPROVE! (?) Потом работать с xattr, чтобы ограничить только на процесс.
    link subset /var/tmp/portage/{,**/}*		-> /var/tmp/portage/{,**/}*,
  }
}

profile portage.env-update @{PYTHON_EXEC}/env-update {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner @{PROC_D}/@{pid}/mounts				r,
  owner @{PROC_D}/@{pid}/fd/				r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  
  # READS/WRITES ---------------------------------------
  /							r,
  /etc/ld.so.conf*					rw,
  /etc/csh.env*						rw,
  /etc/profile.env*					rw,
  /etc/env.d/{,*}					r,
  /etc/portage/**					r,
  /usr/portage/**					r,
  /usr/							r,
  /usr/local/portage/**					r,
  /usr/share/portage/config/*				r,
  /var/cache/edb/mtimedb				r,
  /var/lib/portage/config				rwk,
  
  # TEMP -----------------------------------------------
  owner /tmp/{@{TMP6},@{TMP8}}				rw,	# TMP6 - python2, TMP8 - python3
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  owner /tmp/tmp{@{TMP6},@{TMP8}}			rwk,	# TMP6 - python2, TMP8 - python3
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,	# sys-apps/coreutils
    /sbin/ldconfig					Px,	# sys-libs/glibc
  }
}

profile portage.dispatch-conf @{PYTHON_EXEC}/dispatch-conf {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner @{PROC_D}/@{pid}/mounts				r,
  owner @{PROC_D}/@{pid}/fd/				r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Px -> portage_dispatch_conf_shell,
  audit /usr/bin/diff					Cx,	# sys-apps/diffutils	# FIX ME! audit 15.07.2017
  /usr/bin/find						Cx,	# sys-apps/findutils
  
  # READS/WRITES ---------------------------------------
  /etc/{,**}						rw,
  /usr/portage/**					r,
  /usr/local/portage/**					r,
  /usr/share/portage/**					r,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/dispatch-conf.*/			rw,	# FIX ME! audit 26.11.2017
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
    /usr/share/gnupg/					r,	# app-crypt/gnupg
  }
}

# IMPROVE! Сейчас (модуль ядра 3.6, утилита 2.11.0) не поддерживаются
# множественные вложенные профили, выносим в отдельный профиль.
profile portage_dispatch_conf_shell {
  #include <abstractions/base>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /bin/uname						Px,	# sys-apps/coreutils
  audit /usr/bin/find					Cx,	# sys-apps/findutils	# FIX ME! audit 15.07.2017
  audit /usr/bin/diff					Cx,	# sys-apps/diffutils	# FIX ME! audit 15.07.2017
  
  # READS/WRITES ---------------------------------------
  /etc/{,**}						r,
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
  }
}

profile portage.portageq @{PYTHON_EXEC}/portageq {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC_D}/@{pid}/mounts				r,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  @{PROC_D}/@{pid}/fd/					r,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  /etc/portage/{,**}					r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  /usr/share/portage/{,**}				r,
  /var/db/pkg/{,**}					r,
  /var/cache/edb/{,**}					r,
  
  # TEMP -----------------------------------------------
  /tmp/portage.cron.@{TMP6}				w,	# DELEGATION! 00_update_portage.cron.daily
  								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  owner /tmp/Code::Blocks-@{USER}			w,	# DELEGATION! codeblocks
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,	# sys-apps/coreutils
    
    # TEMP ---------------------------------------------
    /tmp/portage.cron.@{TMP6}				w,	# DELEGATION! 00_update_portage.cron.daily
    								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
    owner /tmp/Code::Blocks-@{USER}			w,	# DELEGATION! codeblocks
  }
}

profile portage.etc-update /usr/sbin/etc-update {
  #include <abstractions/base>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/sbin/etc-update					r,
  @{shell}						mr,
  /bin/cat						Cx,	# sys-apps/coreutils
  /bin/grep						Cx,	# sys-apps/grep
  /bin/cut						Cx,	# sys-apps/coreutils
  /bin/rm						Cx,	# sys-apps/coreutils
  /bin/mkdir						Cx,	# sys-apps/coreutils
  /bin/chmod						Cx,	# sys-apps/coreutils
  /bin/chown						Cx,	# sys-apps/coreutils
  /bin/sed						Cx,	# sys-apps/sed
  /bin/sort						Cx,	# sys-apps/coreutils
  /bin/head						Cx,	# sys-apps/coreutils
  /bin/wc						Cx,	# sys-apps/coreutils
  /bin/mv						Cx,	# sys-apps/coreutils
  audit /bin/readlink					Cx,	# sys-apps/coreutils	# FIX ME! audit 15.07.2017
  /usr/bin/diff						Cx,	# sys-apps/diffutils
  /usr/bin/find						Cx,	# sys-apps/findutils
  @{PYTHON_EXEC_WRAPPER}				Cx -> portageq,	# dev-lang/python-exec
  
  # TEMP -----------------------------------------------
  owner /tmp/@{TMP_SH}					rw,
  owner /var/tmp/etc-update-@{pids}/{,**}		rw,
  
  profile cat /bin/cat {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # READS/WRITES -------------------------------------
    /etc/os-release					r,	# sys-apps/baselayout
    
    # TEMP ---------------------------------------------
    owner /tmp/@{TMP_SH}				r,
  }
  
  profile grep /bin/grep {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
  }
  
  profile cut /bin/cut {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cut						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
    
    # READS/WRITES -------------------------------------
    /etc/**						w,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/{,**}		rw,
  }
  
  profile mkdir /bin/mkdir {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mkdir						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/{,**/}		w,
  }
  
  profile chmod /bin/chmod {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chmod						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/			w,
  }
  
   profile chown /bin/chown {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chown						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/			w,
  }
  
  profile sed /bin/sed {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sed						mr,
    
    # READS/WRITES -------------------------------------
    /etc/etc-update.conf				r,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/{,**}		rw,
  }
  
  profile sort /bin/sort {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sort						mr,
  }
  
  profile head /bin/head {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/head						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/**		r,
  }
  
  profile wc /bin/wc {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/wc						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/**		r,
  }
  
  profile mv /bin/mv {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mv						mr,
    
    # READS/WRITES -------------------------------------
    /etc/**						rw,
  }
  
  profile readlink /bin/readlink {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/readlink					mr,
  }
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
    
    # READS/WRITES -------------------------------------
    /etc/{,**}						r,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/etc-update-@{pids}/**		r,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    capability dac_read_search,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
    /usr/share/gnupg/					r,	# app-crypt/gnupg
  }
  
  profile portageq {
    #include <abstractions/base>
    #include <abstractions/python-exec>
    
    # EXECUTABLES --------------------------------------
    @{PYTHON_EXEC}/portageq				Px,
  }
}

profile portage.emerge-webrsync /usr/bin/emerge-webrsync {
  #include <abstractions/base>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/emerge-webrsync				r,
  @{shell}						mr,
  /bin/date						Cx,	# sys-apps/coreutils
  /bin/rm						Cx,	# sys-apps/coreutils
  /bin/cut						Cx,	# sys-apps/coreutils
  /bin/cat						Cx,	# sys-apps/coreutils
  /bin/mktemp						Cx,	# sys-apps/coreutils
  /bin/tar						Cx,	# app-arch/tar
  /bin/chown						Cx,	# sys-apps/coreutils
  /bin/stty						Px,	# sys-apps/coreutils
  /usr/bin/md5sum					Cx,	# sys-apps/coreutils
  /usr/bin/xz						Cx,	# app-arch/xz-utils
  /usr/bin/stat						Cx,	# sys-apps/coreutils
  /usr/bin/rsync					Cx,	# net-misc/rsync
  /usr/bin/fmt						Cx,	# sys-apps/coreutils
  /usr/bin/gpg{,2}					Px,	# app-crypt/gnupg
  /usr/bin/renice					Px,	# sys-apps/util-linux
  /usr/bin/wget						Px,	# net-misc/wget
  @{PYTHON_EXEC_WRAPPER}				Cx -> portage,	# dev-lang/python-exec
  
  # TEMP -----------------------------------------------
  owner /tmp/@{TMP_SH}					rw,
  owner /var/tmp/portage/webrsync-@{TMP6}/portage-*.md5sum r,
  
  profile date /bin/date {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/date						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-@{TMP6}/{,**}		rw,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  }
  
  profile cut /bin/cut {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cut						mr,
    
    # READS/WRITES -------------------------------------
    /usr/portage/metadata/timestamp.x			r,
  }
  
  profile cat /bin/cat {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # TEMP ---------------------------------------------
    owner /tmp/@{TMP_SH}				r,
  }
  
  profile mktemp /bin/mktemp {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mktemp						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-@{TMP6}/		w,
  }
  
  profile tar /bin/tar {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # CAPABILITIES -------------------------------------
    capability chown,
    capability fsetid,
    capability fowner,
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tar						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-@{TMP6}/**		w,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  }
  
  profile chown /bin/chown {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # CAPABILITIES -------------------------------------
    capability chown,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chown						mr,
    
    # TEMP ---------------------------------------------
    /var/tmp/portage/webrsync-@{TMP6}/**		rw,	# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
  }
  
  profile xz /usr/bin/xz {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/xz						mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-@{TMP6}/**		r,
  }
  
  profile md5sum /usr/bin/md5sum {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/md5sum					mr,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-@{TMP6}/**		r,
  }
  
  profile stat /usr/bin/stat {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/stat					mr,
  }
  
  profile rsync /usr/bin/rsync {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/rsync					mr,
    
    # READS/WRITES -------------------------------------
    /usr/portage/					r,
    /usr/portage/**					rw,
    
    # TEMP ---------------------------------------------
    owner /var/tmp/portage/webrsync-@{TMP6}/**		r,
  }
  
  profile fmt /usr/bin/fmt {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/fmt					mr,
  }
  
  profile portage {
    #include <abstractions/base>
    #include <abstractions/python-exec>
    
    # EXECUTABLES --------------------------------------
    @{PYTHON_EXEC}/emerge				Px,
    @{PYTHON_EXEC}/portageq				Px,
  }
}

profile portage.emaint @{PYTHON_EXEC}/emaint {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/nameservice>
  #include <abstractions/ncurses>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  capability chown,
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner @{PROC_D}/@{pid}/mounts				r,
  owner @{PROC_D}/@{pid}/fd/				r,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						Cx,
  /usr/bin/find						Cx,	# sys-apps/findutils
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  /etc/portage/{,**}					r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  /usr/share/portage/{,**}				r,
  /var/lib/portage/{,**}				r,
  /var/lib/gentoo/{,**}					rw,
  /var/lib/gentoo/{,**/}*				k,
  /var/db/pkg/{,**}					r,
  /var/cache/edb/{,**}					r,
  
  # TEMP -----------------------------------------------
  owner /tmp/{@{TMP6},@{TMP8}}				rw,	# TMP6 - python2, TMP8 - python3
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  owner /tmp/tmp{@{TMP6},@{TMP8}}			rwk,	# TMP6 - python2, TMP8 - python3
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  
  profile shell @{shell} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/uname						Px,	# sys-apps/coreutils
    /usr/bin/emerge-webrsync				Px,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
    /etc/{,**}						r,
  }
}

profile portage.cgroup-release-agent /{usr/lib{,32,64}/portage/@{PYTHON},var/tmp/portage/._portage_reinstall_.{@{TMP6},@{TMP8}}/bin}/cgroup-release-agent {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/lib{,32,64}/portage/@{PYTHON}/cgroup-release-agent r,
  /var/tmp/portage/._portage_reinstall_.{@{TMP6},@{TMP8}}/bin/cgroup-release-agent r,
  @{shell}						mr,
  /bin/rmdir						Cx,	# sys-apps/coreutils
  
  profile rmdir /bin/rmdir {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    @{SYS_D}/fs/cgroup/portage/{,**}			w,
    
    # EXECUTABLES --------------------------------------
    /bin/rmdir						mr,
  }
}

profile portage.ebuild.sh /usr/lib{,32,64}/portage/@{PYTHON}/ebuild.sh {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/lib{,32,64}/portage/@{PYTHON}/ebuild.sh		r,
  @{shell}						mr,
  
  # READS/WRITES ---------------------------------------
  /etc/portage/bashrc					r,
  /usr/share/sandbox/sandbox.bashrc			r,
  /usr/portage/{,**}					r,
  /usr/local/portage/{,**}				r,
  
  # TEMP -----------------------------------------------
  owner /tmp/ebuild-cache.{@{TMP6},@{TMP8}}		rw,	# DELEGATION! eix
  /tmp/portage.cron.@{TMP6}				w,	# DELEGATION! 00_update_portage.cron.daily
  								# IMPROVE! Ограничить (fsuid=0,250 && ouid=0,250).
}
