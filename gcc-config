# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

@{GCC}={c++,cpp,g++,gcc,gcc-ar,gcc-nm,gcc-ranlib,gcov,gcov-dump,gcov-tool,cc}

#include <local/tunables.d/>

profile gcc-config /usr/bin/gcc-config flags=(complain) {	# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
  #include <abstractions/base>
  #include <abstractions/ncurses>
  
  # CAPABILITIES ---------------------------------------
  capability mknod,
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/gcc-config					r,
  @{shell}						mr,
  /bin/mv						Cx,	# sys-apps/coreutils
  /bin/cp						Cx,	# sys-apps/coreutils
  /bin/rm						Cx,	# sys-apps/coreutils
  /bin/ln						Cx,	# sys-apps/coreutils
  /bin/tr						Px,	# sys-apps/coreutils
  /bin/cat						Cx,	# sys-apps/coreutils
  /bin/sed						Cx,	# sys-apps/sed
  /bin/touch						Cx,	# sys-apps/coreutils
  /bin/sort						Cx,	# sys-apps/coreutils
  /bin/grep						Cx,	# sys-apps/grep
  /bin/tail						Cx,	# sys-apps/coreutils
  /bin/mkdir						Cx,	# sys-apps/coreutils
  /bin/rmdir						Cx,	# sys-apps/coreutils
  /bin/egrep						Cx,	# sys-apps/grep
  /sbin/consoletype					Px,	# sys-apps/gentoo-functions
  /bin/stty						Px,	# sys-apps/coreutils
  /usr/bin/tput						Px,	# sys-libs/ncurses
  /usr/bin/find						Cx,	# sys-apps/findutils
  /usr/bin/cmp						Cx,	# sys-apps/diffutils
  /usr/bin/gawk						Cx,	# sys-apps/gawk
  /usr/bin/tac						Cx,	# sys-apps/coreutils
  /lib{,32,64}/rc/bin/eval_ecolors			Px,	# sys-apps/openrc
  /lib{,32,64}/rc/bin/ebegin				Px,	# sys-apps/openrc
  /lib{,32,64}/rc/bin/ewarn				Px,	# sys-apps/openrc
  /lib{,32,64}/rc/bin/eend				Px,	# sys-apps/openrc
  /lib{,32,64}/rc/bin/eerror				Px,	# sys-apps/openrc
  @{PYTHON_EXEC_WRAPPER}				Cx -> portageq,		# dev-lang/python-exec
  
  # READS/WRITES ---------------------------------------
  /							r,
  /lib{,32,64}/						r,
  /etc/env.d/						r,
  /etc/env.d/gcc/{,config-@{CHOST},@{CHOST}-[0-9]*}	r,
  /etc/env.d/gcc/config-@{CHOST}			w,
  /etc/env.d/[0-9]*gcc-@{CHOST}.tmp			w,
  /etc/ld.so.conf.d/[0-9]*gcc-@{CHOST}.conf		w,
  /usr/lib{,32,64}/gcc/@{CHOST}/[0-9]*/libgcc.a		rw,
  /usr/@{CHOST}/gcc-bin/[0-9]*/{,**}			r,
  
  # TEMP -----------------------------------------------
  owner /tmp/@{TMP_SH}					rw,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  owner /tmp/Code::Blocks-@{USER}			w,	# DELEGATION! codeblocks
  
  profile mv /bin/mv flags=(complain) {				# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mv						mr,
    
    # READS/WRITES -------------------------------------
    /lib{,32,64}/.gcc.config.cpp			w,
    /lib{,32,64}/cpp					w,
    /lib{,32,64}/.gcc.config.new/*			w,
    /usr/bin/.gcc.config.@{GCC}				rw,
    /usr/bin/.gcc.config.@{CHOST}-@{GCC}		rw,
    /usr/bin/@{GCC}					w,
    /usr/bin/@{CHOST}-@{GCC}				w,
  }
  
  profile cp /bin/cp flags=(complain) {				# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cp						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/*					rw,
    /lib{,32,64}/.gcc.config.cpp			w,
    /lib{,32,64}/.gcc.config.new/*			w,
    /usr/bin/.gcc.config.@{GCC}				w,
    /usr/bin/.gcc.config.@{CHOST}-@{GCC}		w,
  }
  
  profile rm /bin/rm flags=(complain) {				# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/.NATIVE				w,
    /etc/env.d/[0-9]*gcc-@{CHOST}.tmp			w,
    /lib{,32,64}/.gcc.config.@{pids}			w,
    /usr/bin/gcc-[0-9]*					w,
    /usr/bin/@{CHOST}-gcc-[0-9]*			w,
  }
  
  profile ln /bin/ln flags=(complain) {				# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/ln						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/**					w,	# sys-devel/gcc
    link subset /lib{,32,64}/.gcc.config.@{pids}	-> /usr/lib{,32,64}/gcc/@{CHOST}/[0-9]*/*,
  }
  
  profile cat /bin/cat flags=(complain) {			# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
  
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/[0-9]*gcc-@{CHOST}.tmp			w,
    
    # TEMP ---------------------------------------------
    owner /tmp/@{TMP_SH}				rw,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  }
  
  profile sed /bin/sed {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sed						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/**					rw,	# sys-devel/gcc
    
    # TEMP ---------------------------------------------
    audit owner /tmp/sed*				rw,	# FIX ME! audit 26.11.2017	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  }
  
  profile touch /bin/touch flags=(complain) {			# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/touch						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/@{CHOST}-[0-9]*			w,	# sys-devel/gcc
    /lib{,32,64}/.gcc.config.cpp			w,
    /usr/bin/.gcc.config.@{GCC}				w,
    /usr/bin/.gcc.config.@{CHOST}-@{GCC}		w,
  }
  
  profile sort /bin/sort {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sort						mr,
  }
  
  profile grep /bin/grep {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/*					r,	# sys-devel/gcc
  }
  
  profile tail /bin/tail {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tail						mr,
  }
  
  profile mkdir /bin/mkdir {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mkdir						mr,
    
    # READS/WRITES -------------------------------------
    /lib{,32,64}/.gcc.config.new/			w,
  }
  
  profile rmdir /bin/rmdir {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rmdir						mr,
    
    # READS/WRITES -------------------------------------
    /lib{,32,64}/.gcc.config.new/			w,
  }
  
  profile egrep /bin/egrep {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/egrep						r,
    @{shell}						mr,
    /bin/grep						ix,	# sys-apps/grep		# Все правильно, для egrep используем с ix.
    
    # READS/WRITES -------------------------------------
    /etc/env.d/gcc/*					r,	# sys-devel/gcc
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
    
    # READS/WRITES -------------------------------------
    /							r,
  }
  
  profile cmp /usr/bin/cmp flags=(complain) {			# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/cmp					mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/[0-9]*gcc-@{CHOST}{,.tmp}		r,
  }
  
  profile gawk /usr/bin/gawk flags=(complain) {			# FIX ME! complain 17.12.2017, проверить на обновлении версий GCC.
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/gawk					mr,
    
    # READS/WRITES -------------------------------------
    /etc/env.d/[0-9]*gcc-@{CHOST}.tmp			w,
    /etc/env.d/gcc/**					r,	# sys-devel/gcc
    
    # TEMP ---------------------------------------------
    owner /tmp/Code::Blocks-@{USER}			w,	# DELEGATION! codeblocks
  }
  
  profile tac /usr/bin/tac {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/tac					mr,
    
    # TEMP ---------------------------------------------
    owner /tmp/tac@{TMP6}				rw,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  }
  
  profile portageq {
    #include <abstractions/base>
    #include <abstractions/python>
    #include <abstractions/python-exec>
    #include <abstractions/nameservice>
    
    # EXECUTABLES --------------------------------------
    @{PYTHON_EXEC}/portageq				Px,	# sys-apps/portage
    @{PYTHON_EXEC}/env-update				Px,	# sys-apps/portage
    
    # TEMP ---------------------------------------------
    owner /tmp/Code::Blocks-@{USER}			w,	# DELEGATION! codeblocks
  }
}
