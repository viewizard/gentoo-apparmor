# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <local/tunables.d/>

# предустановка для abstractions/fs/access-by-user-preset-rwk
@{USERS_DIR_rwk}="**"
@{USERS_FILE_rwk}="**"

# профиль используется службами без аутентификации
profile shell_service @{shell} {
  #include <abstractions/base>
  #include <abstractions/shell>
  #include <abstractions/consoles>
  #include <abstractions/nameservice>
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /bin/sed						Cx,	# sys-apps/sed
  /bin/uname						Px,	# sys-apps/coreutils
  /sbin/mdadm						Px,	# sys-fs/mdadm	# FIX ME! (?) вынести в <local/shell/shell_service.d/>
  
  profile sed /bin/sed {
    #include <abstractions/base>
    
    # EXECUTABLES --------------------------------------
    /bin/sed						mr,
  }
}

# профиль всех пользователей, прошедших аутентификацию
# профиль терминала по умолчанию
profile shell_users {
  #include <abstractions/base>
  #include <abstractions/shell>
  #include <abstractions/consoles>
  #include <abstractions/nameservice>
  
  # CAPABILITIES ---------------------------------------
  audit capability setuid,					# FIX ME! audit 24.10.2017
  audit capability sys_tty_config,				# FIX ME! audit 24.10.2017
  audit capability kill,					# FIX ME! audit 24.10.2017
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /bin/ls						Cx,	# sys-apps/coreutils
  /bin/ln						Cx,	# sys-apps/coreutils
  /bin/df						Px,	# sys-apps/coreutils
  /bin/rm						Cx,	# sys-apps/coreutils
  /bin/tty						Px,	# sys-apps/coreutils
  /bin/grep						Cx,	# sys-apps/grep
  /bin/ps						Px,	# sys-process/procps
  /bin/passwd						Px,	# sys-apps/shadow
  /bin/uname						Px,	# sys-apps/coreutils
  /bin/su						Px,	# sys-apps/shadow
  /bin/rc-status					Px,	# sys-apps/openrc
  /bin/sleep						Px,	# sys-apps/coreutils
  /usr/bin/which					Px,	# sys-apps/which
  /usr/bin/git						Px,	# dev-vcs/git	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/sudo						Px,	# app-admin/sudo
  /usr/bin/whoami					Px,	# sys-apps/coreutils
  /usr/bin/id						Px,	# sys-apps/coreutils
  /usr/bin/startx					Px,	# x11-apps/xinit	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/startxfce4					Px,	# xfce-base/xfce4-session	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/clear					Px,	# sys-libs/ncurses
  /usr/bin/wine						Px,	# app-emulation/wine	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/winecfg					Px,	# app-emulation/wine	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/wine-{any,d3d9,staging,vanilla}-[0-9]*	Px,	# app-emulation/wine-*	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/winecfg-{any,d3d9,staging,vanilla}-[0-9]*	Px,	# app-emulation/wine-*	# FIX ME! (?) вынести в <local/shell/shell_users.d/>
  /usr/bin/dircolors					Px,	# sys-apps/coreutils
  /usr/bin/libnotify-notify-send			Px,	# x11-libs/libnotify	# /usr/bin/libnotify-notify-send-users запускает в шеле пользователя.
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  
  profile grep /bin/grep {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-users-preset-rwk>
    #include <abstractions/fs/deny-by-pattern-internet>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
  }
  
  profile ln /bin/ln {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-users-preset-rwk>
    #include <abstractions/fs/deny-by-pattern-internet>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/ln						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-users-preset-rwk>
    #include <abstractions/fs/deny-by-pattern-internet>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
  }
  
  profile ls /bin/ls {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    #include <abstractions/fs/access-by-users-preset-rwk>
    #include <abstractions/fs/deny-by-pattern-internet>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/ls						mr,
  }
}

# профиль специального пользователя root
profile shell_root {
  #include <abstractions/base>
  #include <abstractions/shell>
  #include <abstractions/consoles>
  #include <abstractions/nameservice>
  #include <local/profile_blocks/shell_root.d/>
  
  # CAPABILITIES ---------------------------------------
  capability dac_read_search,
  
  # SIGNAL ---------------------------------------------
  signal (send) set=(hup, int, kill, term, cont),		# Реакция на нажатия комбинаций кнопок.
  								# IMPROVE! Отсылать запущенным в этом шеле.
  
  # PSEUDO ---------------------------------------------
  /dev/ptmx						rw,
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /bin/ls						Cx,	# sys-apps/coreutils
  /bin/ln						Cx,	# sys-apps/coreutils
  /bin/df						Px,	# sys-apps/coreutils
  /bin/rm						Cx,	# sys-apps/coreutils
  /bin/cut						Cx,	# sys-apps/coreutils
  /bin/tty						Px,	# sys-apps/coreutils
  /bin/tr						Px,	# sys-apps/coreutils
  /bin/grep						Cx,	# sys-apps/grep
  /bin/ps						Px,	# sys-process/procps
  /bin/env						Cx,	# sys-apps/coreutils
  /bin/sed						Cx,	# sys-apps/sed
  /bin/mount						Cx,	# sys-apps/util-linux
  /bin/umount						Cx,	# sys-apps/util-linux
  /bin/sleep						Px,	# sys-apps/coreutils
  /bin/passwd						Px,	# sys-apps/shadow
  /bin/uname						Px,	# sys-apps/coreutils
  /bin/su						Px,	# sys-apps/shadow
  /bin/cp						Cx,	# sys-apps/coreutils
  /bin/mv						Cx,	# sys-apps/coreutils
  /bin/chown						Cx,	# sys-apps/coreutils
  /bin/chmod						Cx,	# sys-apps/coreutils
  /bin/nano						Cx,	# app-editors/nano
  /bin/kmod						Px,	# sys-apps/kmod
  /bin/cat						Cx,	# sys-apps/coreutils
  /bin/dd						Cx,	# sys-apps/coreutils
  /bin/ping						Px,	# net-misc/iputils
  /bin/ifconfig						Px,	# sys-apps/net-tools
  /bin/ip						Px,	# sys-apps/iproute2
  /bin/rc-status					Px,	# sys-apps/openrc
  /bin/date						Px,	# sys-apps/coreutils
  /bin/netstat						Px,	# sys-apps/net-tools
  /bin/getfacl						Px,	# sys-apps/acl
  /bin/setfacl						Px,	# sys-apps/acl
  /bin/tar						Cx,	# app-arch/tar
  /bin/head						Cx,	# sys-apps/coreutils
  /bin/tail						Cx,	# sys-apps/coreutils
  /bin/getfattr						Px,	# sys-apps/attr
  /bin/setfattr						Px,	# sys-apps/attr
  /bin/mkdir						Cx,	# sys-apps/coreutils
  /bin/touch						Cx,	# sys-apps/coreutils
  /bin/lsblk						Px,	# sys-apps/util-linux
  /bin/sync						Px,	# sys-apps/coreutils
  /bin/udevadm						Px,	# sys-fs/eudev
  /bin/dmesg						Px,	# sys-apps/util-linux
  /sbin/mdadm						Px,	# sys-fs/mdadm		# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /sbin/shutdown					Px,	# sys-apps/sysvinit
  /sbin/{halt,poweroff,reboot}				Px,	# sys-apps/sysvinit
  /sbin/openrc-shutdown					Px,	# sys-apps/openrc (openrc-init)
  /sbin/cryptsetup					Px,	# sys-fs/cryptsetup	# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /sbin/apparmor_parser					Px,	# sys-apps/apparmor
  /sbin/{,c}fdisk					Px,	# sys-apps/util-linux
  /sbin/lvm						Px,	# sys-fs/lvm2		# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /sbin/e2fsck						Px,	# sys-fs/e2fsprogs
  /sbin/mke2fs						Px,	# sys-fs/e2fsprogs
  /sbin/tune2fs						Px,	# sys-fs/e2fsprogs
  /sbin/resize2fs					Px,	# sys-fs/e2fsprogs
  /sbin/dumpe2fs					Px,	# sys-fs/e2fsprogs
  /sbin/mkswap						Px,	# sys-apps/util-linux
  /sbin/rc-update					Px,	# sys-apps/openrc
  /sbin/fsck						Px,	# sys-apps/util-linux
  /sbin/rc-service					Px,	# sys-apps/openrc
  /sbin/xtables-multi					Px,	# net-firewall/iptables
  /sbin/blkid						Px,	# sys-apps/util-linux
  /sbin/ifcfg						Px,	# sys-apps/iproute2
  /sbin/ifstat						Px,	# sys-apps/iproute2
  /usr/sbin/visudo					Px,	# app-admin/sudo
  /usr/bin/which					Px,	# sys-apps/which
  /usr/bin/git						Px -> git_root,	# dev-vcs/git	# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /usr/bin/killall					Px,	# sys-process/psmisc
  /usr/bin/gsettings					Px,	# dev-libs/glib
  /usr/bin/revdep-rebuild				Px,	# app-portage/gentoolkit
  /usr/bin/whoami					Px,	# sys-apps/coreutils
  /usr/bin/id						Px,	# sys-apps/coreutils
  /usr/bin/rsync					Cx,	# net-misc/rsync
  /usr/bin/htop						Px,	# sys-process/htop
  /usr/bin/mc						Px -> mc_root,	# app-misc/mc
  /usr/bin/eselect					Px,	# app-admin/eselect
  /usr/bin/ntpq						Px,	# net-misc/ntp
  /usr/bin/stat						Px,	# sys-apps/coreutils
  /usr/bin/file						Cx,	# sys-apps/file
  /usr/bin/lsusb					Px,	# sys-apps/usbutils
  /usr/bin/gpg{,2,-static}				Px,	# app-crypt/gnupg
  /usr/bin/find						Cx,	# sys-apps/findutils
  /usr/bin/nmap						Px,	# net-analyzer/nmap
  /usr/bin/wget						Px -> wget_root,	# net-misc/wget
  /usr/bin/man						Px,	# sys-apps/man-db
  /usr/bin/locale					Px,	# sys-libs/glibc
  /usr/bin/ldd						Px,	# sys-libs/glibc
  /usr/bin/evmctl					Px,	# app-crypt/ima-evm-utils
  /usr/bin/gawk						Cx,	# sys-apps/gawk
  /usr/bin/patch					Cx,	# sys-devel/patch	# FIX ME! (?) вынести в <local/shell/shell_root.d/> (вместе с профилем!)
  /usr/bin/diff						Cx,	# sys-apps/diffutils	# FIX ME! (?) вынести в <local/shell/shell_root.d/> (вместе с профилем!)
  /usr/bin/gcc-config					Px,	# sys-devel/gcc-config
  /usr/bin/ck-list-sessions				Px,	# sys-auth/consolekit
  /usr/bin/dig						Px,	# net-dns/bind-tools
  /usr/bin/dircolors					Px,	# sys-apps/coreutils
  /usr/bin/eix						Px,	# app-portage/eix
  /usr/bin/eix-test-obsolete				Px,	# app-portage/eix
  /usr/bin/eix-sync					Px,	# app-portage/eix
  /usr/bin/xargs					Cx,	# sys-apps/findutils
  /usr/bin/gpasswd					Px,	# sys-apps/shadow
  /usr/sbin/gdisk					Px,	# sys-apps/gptfdisk
  /usr/sbin/smartctl					Px,	# sys-apps/smartmontools
  /usr/sbin/useradd					Px,	# sys-apps/shadow
  /usr/sbin/userdel					Px,	# sys-apps/shadow
  /usr/sbin/usermod					Px,	# sys-apps/shadow
  /usr/sbin/groupadd					Px,	# sys-apps/shadow
  /usr/sbin/groupdel					Px,	# sys-apps/shadow
  /usr/sbin/lspci					Px,	# sys-apps/pciutils
  /usr/sbin/etc-update					Px,	# sys-apps/portage
  /usr/sbin/grub-mkconfig				Px,	# sys-boot/grub		# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /usr/sbin/grub-install				Px,	# sys-boot/grub		# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /usr/sbin/perl-cleaner				Px,	# app-admin/perl-cleaner
  /usr/sbin/iftop					Px,	# net-analyzer/iftop
  /usr/sbin/nettop					Px,	# net-analyzer/nettop
  /usr/sbin/firewall					Px,	# net-firewall/iptables
  @{PYTHON_EXEC_WRAPPER}				Px -> python_exec_root,	# dev-lang/python-exec
  /usr/local/bin/*					Px,	# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /usr/local/sbin/*					Px,	# FIX ME! (?) вынести в <local/shell/shell_root.d/>
  /etc/init.d/*						Px,	# sys-apps/openrc
  audit deny /usr/bin/startx*				x,	# RBAC! Запрещаем запуск Xorg-server под root. У нас
  								# нет полноценной ветки профилей для запуска всех
  								# дочерних процессов.
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
  /{,**/}						r,	# Разрешаем получать списки файлов в директориях.
  
  profile ls /bin/ls {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/ls						mr,
  }
  
  profile ln /bin/ln {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/ln						mr,
  }
  
  profile rm /bin/rm {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/rm						mr,
  }
  
  profile cut /bin/cut {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cut						mr,
  }
  
  profile grep /bin/grep {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES -------------------------------------
    capability mknod,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/grep						mr,
  }
  
  profile env /bin/env {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/env						mr,
  }
  
  profile sed /bin/sed {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/sed						mr,
  }
  
  profile mount /bin/mount {
    #include <abstractions/base>
    #include <local/profile_blocks/shell_root.mount.d/>		# Локальные правила монтирования и размонтирования.
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    capability dac_override,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    @{sys}/devices/virtual/block/@{BLOCK_VIRT}/{,**}	r,
    audit @{PROC}/@{pid}/mounts				r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
    owner @{PROC}/@{pid}/mountinfo			r,
    
    # EXECUTABLES --------------------------------------
    /bin/mount						mr,
    
    # READS/WRITES -------------------------------------
    /etc/fstab						r,
    /run/mount/utab					rw,
  }
  
  profile umount /bin/umount {
    #include <abstractions/base>
    #include <local/profile_blocks/shell_root.mount.d/>		# Локальные правила монтирования и размонтирования.
    
    # CAPABILITIES -------------------------------------
    capability sys_admin,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    @{sys}/devices/virtual/block/@{BLOCK_VIRT}/{,**}	r,
    audit @{PROC}/@{pid}/mountinfo			r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
    
    # EXECUTABLES --------------------------------------
    /bin/umount						mr,
    
    # READS/WRITES -------------------------------------
    /run/mount/utab					rw,
  }
  
  profile cp /bin/cp {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES -------------------------------------
    capability fowner,
    capability fsetid,
    capability sys_admin,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cp						mr,
  }
  
  profile mv /bin/mv {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mv						mr,
  }
  
  profile chown /bin/chown {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES -------------------------------------
    capability chown,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chown						mr,
  }
  
  profile chmod /bin/chmod {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES -------------------------------------
    capability fowner,
    capability fsetid,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/chmod						mr,
  }
  
  profile nano /bin/nano {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    #include <abstractions/ncurses>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/nano						mr,
    
    # READS/WRITES -------------------------------------
    /etc/nanorc						r,
    /usr/share/nano/{,**}				r,
    /usr/share/misc/magic.mgc				r,
  }
  
  profile cat /bin/cat {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
  }
  
  profile dd /bin/dd {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/dd						mr,
  }
  
  profile tar /bin/tar {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES -------------------------------------
    capability mknod,
    capability fowner,
    capability fsetid,
    capability chown,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tar						mr,
    /bin/bzip2						ix,	# app-arch/bzip2
    
    # READS/WRITES -------------------------------------
    owner /{,**/}*					l,	# Все правильно, в access-by-pattern-systemusers запрещаем, что нужно.
  }
  
  profile head /bin/head {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/head						mr,
  }
  
  profile tail /bin/tail {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/tail						mr,
  }
  
  profile mkdir /bin/mkdir {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/mkdir						mr,
  }
  
  profile touch /bin/touch {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/touch						mr,
  }
  
  profile rsync /usr/bin/rsync {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/rsync					mr,
  }
  
  profile file /usr/bin/file {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/file					mr,
  }
  
  profile find /usr/bin/find {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/find					mr,
  }
  
  profile gawk /usr/bin/gawk {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/gawk					mr,
  }
  
  profile patch /usr/bin/patch {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # CAPABILITIES ---------------------------------------
    capability chown,
    capability fowner,
    capability fsetid,
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/patch					mr,
  }
  
  profile diff /usr/bin/diff {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/diff					mr,
  }
  
  profile xargs /usr/bin/xargs {
    #include <abstractions/base>
    #include <abstractions/fs/access-by-pattern-filemanager>
    #include <abstractions/fs/access-by-pattern-systemusers>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /usr/bin/xargs					mr,
    /bin/grep						ix,	# FIX ME! потом исправить на "Px -> shell_root//grep",	# sys-apps/grep
  }
}

# профиль специального пользователя root (переключение через sudo)
profile shell_sudo {
  #include <abstractions/base>
  #include <abstractions/shell>
  #include <abstractions/consoles>
  #include <abstractions/nameservice>
  #include <abstractions/profile_transitions/sudo>
  
  # SIGNAL ---------------------------------------------
  signal (send) set=(hup, int, kill, term, cont),		# Реакция на нажатия комбинаций кнопок.
  								# IMPROVE! Отсылать запущенным в этом шеле.
  
  # EXECUTABLES ----------------------------------------
  @{shell}						mr,
  /usr/bin/dircolors					Px,	# sys-apps/coreutils
  
  # READS/WRITES ---------------------------------------
  /etc/profile.env					r,
}

# профиль специального пользователя root после переключения chroot
profile shell_chroot {
  # Запрещаем работать с базовой системой:
  audit deny /{,*}					xmrwkl,
  audit deny /bin/{,**}					xmrwkl,
  audit deny /boot/{,**}				xmrwkl,
  audit deny /etc/{,**}					xmrwkl,
  audit deny /home/{,**}				xmrwkl,
  audit deny /lib{,32,64}/{,**}				xmrwkl,
  audit deny /media/{,**}				xmrwkl,
  audit deny /mnt/{,**}					xmrwkl,
  audit deny /opt/{,**}					xmrwkl,
  audit deny @{PROC}/{,**}				xmrwkl,
  audit deny /root/{,**}				xmrwkl,
  audit deny /run/{,**}					xmrwkl,
  audit deny /sbin/{,**}				xmrwkl,
  audit deny @{sys}/{,**}				xmrwkl,
  audit deny /tmp/{,**}					xmrwkl,
  audit deny /usr/{,**}					xmrwkl,
  audit deny /var/cache/{,**}				xmrwkl,
  audit deny /var/db/{,**}				xmrwkl,
  audit deny /var/empty/{,**}				xmrwkl,
  audit deny /var/lib/{,**}				xmrwkl,
  audit deny /var/log/{,**}				xmrwkl,
  audit deny /var/spool/{,**}				xmrwkl,
  audit deny /var/tmp/{,**}				xmrwkl,
  # IMPROVE! Неявно запрещаем работать со всем в /dev, кроме консоли.
  # Когда будет возможность - запретить явно, с исключениями для консолей.
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # CAPABILITIES ---------------------------------------
  capability chown,
  capability dac_override,
  capability dac_read_search,
  capability fowner,
  capability fsetid,
  capability kill,
  capability setgid,
  capability setuid,
  capability sys_ptrace,
  capability sys_admin,
  capability sys_nice,
  capability sys_resource,
  capability sys_tty_config,
  capability mknod,
  capability setfcap,
  
  # PTRACE ---------------------------------------------
  ptrace (readby, tracedby),
  ptrace (read, trace) peer=@{profile_name},
  
  # SIGNAL ---------------------------------------------
  signal peer=@{profile_name},
  signal (receive, send) set=("exists"),
  signal (receive) set=(hup, int, kill, term, cont, stop),
  
  # UNIX -----------------------------------------------
  unix peer=(label=@{profile_name}),
  unix (create, getattr, getopt, setopt, shutdown),
  
  # DBUS -----------------------------------------------
  
  # MOUNT ----------------------------------------------
  mount fstype=cgroup options=(rw, nosuid, nodev, noexec) tmpfs -> @{CHROOT}/sys/fs/cgroup/portage/,
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # PSEUDO ---------------------------------------------	# Т.к. мы передаем /dev, /sys, /proc в новый рут, максимально
  								# ограничиваем доступ к этим участкам.
  @{CHROOT}/dev/{,**}					r,
  @{CHROOT}/dev/tty					w,
  @{CHROOT}/dev/tty[0-9]*				rw,
  @{CHROOT}/dev/pts/[0-9]*				rw,
  @{CHROOT}/dev/ptmx					w,
  @{CHROOT}/dev/log					w,
  @{CHROOT}/dev/null					wk,
  @{CHROOT}/dev/zero					w,
  @{CHROOT}/dev/full					w,
  owner @{CHROOT}/dev/shm/*				wl,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  @{CHROOT}/sys/{,**}					r,
  @{CHROOT}/sys/fs/cgroup/portage/{,**}			w,
  @{CHROOT}/proc/{,**}				r,
  audit deny @{CHROOT}/dev/@{BLOCK_ALL}			wk,	# Запрещаем работать с блочными устройствами.
  
  # EXECUTABLES ----------------------------------------
  @{CHROOT}/@{shell}					mr,
  @{CHROOT}/bin/{,**/}*					ix,
  @{CHROOT}/etc/{,**/}*					ix,
  @{CHROOT}/opt/{,**/}*					ix,
  @{CHROOT}/sbin/{,**/}*				ix,
  @{CHROOT}/usr/{,**/}*					ix,
  @{CHROOT}/var/tmp/portage/*/*/{,**/}*			ix,
  
  # READS/WRITES ---------------------------------------
  @{CHROOT}/						rw,
  @{CHROOT}/*						rwk,
  @{CHROOT}/bin/{,**}					rw,
  @{CHROOT}/bin/{,**/}*					kl,
  @{CHROOT}/boot/{,**}					rw,
  @{CHROOT}/boot/{,**/}*				kl,
  @{CHROOT}/etc/{,**}					rw,
  @{CHROOT}/etc/{,**/}*					kl,
  @{CHROOT}/lib{,32,64}/{,**}				rw,
  @{CHROOT}/lib{,32,64}/{,**/}*				kl,
  @{CHROOT}/lib{,32,64}/ld{,32,64}-*.so{,.*}		m,
  @{CHROOT}/lib{,32,64}/**/ld{,32,64}-*.so{,.*}		m,
  @{CHROOT}/lib{,32,64}/lib*.so{,.*}			m,
  @{CHROOT}/lib{,32,64}/**/lib*.so{,.*}			m,
  @{CHROOT}/opt/{,**}					rw,
  @{CHROOT}/opt/{,**/}*					kl,
  @{CHROOT}/run/{,**}					rw,
  @{CHROOT}/run/{,**/}*					kl,
  @{CHROOT}/sbin/{,**}					rw,
  @{CHROOT}/sbin/{,**/}*				kl,
  @{CHROOT}/usr/{,**}					rw,
  @{CHROOT}/usr/{,**/}*					kl,
  @{CHROOT}/usr/lib{,32,64}/*.so{,.*}			m,
  @{CHROOT}/usr/lib{,32,64}/**/lib*.so{,.*}		m,
  @{CHROOT}/usr/lib{,32,64}/locale/{,**/}*		m,
  @{CHROOT}/usr/lib{,32,64}/gconv/*.so			m,
  @{CHROOT}/usr/lib{,32,64}/gconv/gconv-modules*	m,
  @{CHROOT}/usr/src/@{kernel}/tools/gcc/**.so		m,	# Плагины gcc.
  @{CHROOT}/var/{,**}					rw,
  @{CHROOT}/var/{,**/}*					kl,
  
  # USERS ----------------------------------------------
  @{CHROOT}@{HOME}/{,**}				rw,
  @{CHROOT}@{HOME}/{,**/}*				k,
  
  # TEMP -----------------------------------------------
  @{CHROOT}/tmp/{,**}					rw,
  @{CHROOT}/tmp/{,**/}*					k,
  @{CHROOT}/var/tmp/{,**}				rw,
  @{CHROOT}/var/tmp/{,**/}*				k,
}
