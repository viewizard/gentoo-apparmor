# ------------------------------------------------------------------
#
#  Copyright (C) 2016-2018 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <local/tunables.d/>

profile apparmor-utils.aa-status@{p_root} @{PYTHON_EXEC}/aa-status@{t_root} flags=(attach_disconnected) {
  #include <abstractions/base>
  #include <abstractions/python>
  
  # CAPABILITIES ---------------------------------------
  capability sys_ptrace,
  
  # PTRACE ---------------------------------------------
  ptrace (trace),
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{SYS_D}/kernel/security/apparmor/*			r,
  @{PROC_D}/						r,
  @{PROC_D}/@{pids}/attr/{current,prev,exec}		r,
  owner @{PROC_D}/@{pid}/mounts				r,
  
  # READS/WRITES ---------------------------------------
  @{PYTHON_PACKAGES_D}/apparmor/{,**/}			w,
  @{PYTHON_PACKAGES_D}/apparmor/**.pyc{,.*}		w,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/????????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  owner /tmp/apparmor-bugreport-*.txt			rw,
  
  # DENY INHERIT ---------------------------------------
  deny /apparmor/.null					rw,	# flags=(attach_disconnected)
}

profile apparmor-utils.aa-unconfined@{p_root} @{PYTHON_EXEC}/aa-unconfined@{t_root} {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/ncurses>
  
  # CAPABILITIES ---------------------------------------
  capability sys_ptrace,
  
  # PTRACE ---------------------------------------------
  ptrace (trace),
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  @{PROC_D}/						r,
  @{PROC_D}/@{pids}/cmdline				r,
  owner @{PROC_D}/@{pid}/fd/				r,
  owner @{PROC_D}/@{pid}/mounts				r,
  @{PROC_D}/@{pids}/attr/{current,prev,exec}		r,
  
  # EXECUTABLES ----------------------------------------
  /bin/env						mr,
  @{shell}@{t_root}					Cx,
  /bin/netstat@{t_root}					Px,	# sys-apps/net-tools
  
  # READS/WRITES ---------------------------------------
  /etc/apparmor/logprof.conf				r,
  /etc/inputrc						r,
  @{PYTHON_PACKAGES_D}/apparmor/{,**/}			w,
  @{PYTHON_PACKAGES_D}/apparmor/**.pyc{,.*}		w,
  @{PYTHON_PACKAGES_D}/LibAppArmor/**.pyc{,.*}		w,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/{,tmp}??????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  audit owner /tmp/????????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  owner /tmp/apparmor-bugreport-*.txt			rw,
  audit owner /var/tmp/????????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  
  profile shell @{shell}@{t_root} {
    #include <abstractions/base>
    
    # CAPABILITIES -------------------------------------
    capability sys_ptrace,
    
    # PTRACE -------------------------------------------
    ptrace (trace),
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    @{PROC_D}/						r,
    audit @{PROC_D}/@{pid}/fd/				r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
    audit @{PROC_D}/@{pid}/cmdline			r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
    audit @{PROC_D}/@{pid}/net/*			r,	# FIX ME! @{pid}/@{pids} audit 18.10.2017
    
    # EXECUTABLES --------------------------------------
    @{shell}						mr,
    /bin/netstat@{t_root}				Px,	# sys-apps/net-tools
  }
}

profile apparmor-utils.aa-complain@{p_root} @{PYTHON_EXEC}/aa-complain@{t_root} {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/ncurses>
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /bin/env						mr,
  /sbin/apparmor_parser@{t_root}			Px,	# sys-apps/apparmor
  
  # READS/WRITES ---------------------------------------
  /etc/inputrc						r,
  /etc/apparmor/logprof.conf				r,
  /etc/apparmor.d/{,**}					r,
  /etc/apparmor.d/*					w,
  @{PYTHON_PACKAGES_D}/apparmor/{,**/}			w,
  @{PYTHON_PACKAGES_D}/apparmor/**.pyc{,.*}		w,
  @{PYTHON_PACKAGES_D}/LibAppArmor/**.pyc{,.*}		w,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/{,tmp}??????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
}

profile apparmor-utils.aa-enforce@{p_root} @{PYTHON_EXEC}/aa-enforce@{t_root} {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/ncurses>
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /bin/env						mr,
  /sbin/apparmor_parser@{t_root}			Px,	# sys-apps/apparmor
  
  # READS/WRITES ---------------------------------------
  /etc/inputrc						r,
  /etc/apparmor/logprof.conf				r,
  /etc/apparmor.d/{,**}					r,
  /etc/apparmor.d/*					w,
  @{PYTHON_PACKAGES_D}/apparmor/{,**/}			w,
  @{PYTHON_PACKAGES_D}/apparmor/**.pyc{,.*}		w,
  @{PYTHON_PACKAGES_D}/LibAppArmor/**.pyc{,.*}		w,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/{,tmp}??????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
}

profile apparmor-utils.aa-disable@{p_root} @{PYTHON_EXEC}/aa-disable@{t_root} {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/ncurses>
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /bin/env						mr,
  /sbin/apparmor_parser@{t_root}			Px,	# sys-apps/apparmor
  
  # READS/WRITES ---------------------------------------
  /etc/inputrc						r,
  /etc/apparmor/logprof.conf				r,
  /etc/apparmor.d/{,**}					r,
  /etc/apparmor.d/disable/*				w,
  @{PYTHON_PACKAGES_D}/apparmor/{,**/}			w,
  @{PYTHON_PACKAGES_D}/apparmor/**.pyc{,.*}		w,
  @{PYTHON_PACKAGES_D}/LibAppArmor/**.pyc{,.*}		w,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/{,tmp}??????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
}

profile apparmor-utils.aa-logprof@{p_root} @{PYTHON_EXEC}/aa-logprof@{t_root} {
  #include <abstractions/base>
  #include <abstractions/python>
  #include <abstractions/ncurses>
  
  # PSEUDO ---------------------------------------------
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  owner @{PROC_D}/@{pid}/mounts				r,
  
  # EXECUTABLES ----------------------------------------
  /bin/env						mr,
  
  # READS/WRITES ---------------------------------------
  /etc/inputrc						r,
  /etc/apparmor/logprof.conf				r,
  /etc/apparmor.d/{,**}					r,
  
  # TEMP -----------------------------------------------
  audit owner /tmp/????????				rw,	# FIX ME! audit 26.11.2017
  								# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
}

profile apparmor-utils.aa-decode@{p_root} /usr/sbin/aa-decode@{t_root} {
  #include <abstractions/base>
  #include <abstractions/perl>
  
  # PSEUDO ---------------------------------------------
  /dev/tty						rw,
  /dev/tty[0-9]*					rw,
  /dev/pts/[0-9]*					rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/sbin/aa-decode					r,
  @{shell}						mr,
  @{PERL_BIN}@{t_root}					ix,
  /bin/egrep@{t_root}					Cx,	# sys-apps/grep
  /bin/cat@{t_root}					Cx,	# sys-apps/coreutils
  
  # TEMP -----------------------------------------------
  /tmp/@{TMP_SH}					rw,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  
  profile egrep /bin/egrep@{t_root} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty						rw,
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/egrep						r,
    @{shell}						mr,
    /bin/grep@{t_root}					ix,	# sys-apps/grep		# Все правильно, для egrep используем с ix.
  }
  
  profile cat /bin/cat@{t_root} {
    #include <abstractions/base>
    
    # PSEUDO -------------------------------------------
    /dev/tty[0-9]*					rw,
    /dev/pts/[0-9]*					rw,
    
    # EXECUTABLES --------------------------------------
    /bin/cat						mr,
    
    # TEMP ---------------------------------------------
    /tmp/@{TMP_SH}					r,	# IMPROVE! Потом работать с xattr, чтобы ограничить только на процесс.
  }
}
