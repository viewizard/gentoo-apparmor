# ------------------------------------------------------------------
#
#    Copyright (C) 2016 Mikhail Kurinnoi
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of version 2 of the GNU General Public
#    License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <tunables/global>

# FIX ME!
# при завершении работы в init.d/apparmor НЕ выгружать правила, иначе не работает в режиме RBAC ! при перезагрузке - не перезагружает компьютер
# пока НЕ убирать flags=(complain) пока все на 100% не будет работать !
# Режим проверки (выводит в 12-ю консоль постоянно вывод аудита)
# /etc/init.d/syslog-ng stop
# /usr/sbin/syslog-ng --cfgfile "/etc/syslog-ng/syslog-ng-test.conf" --pidfile "/run/syslog-ng.pid"

profile openrc /sbin/openrc flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  capability sys_ptrace,
  capability sys_tty_config,
  capability dac_override,
  capability kill,
  
  /dev/tty rw,
  /dev/tty[0-9]* w,
  /dev/console rw,
  /dev/ptmx rw,
  /dev/pts/[0-9]* rw,
  @{PROC}/ r,
  @{PROC}/cmdline r,
  @{PROC}/@{pid}/cmdline r,
  @{PROC}/@{pid}/environ r,
  @{PROC}/@{pid}/stat r,
  @{PROC}/@{pid}/mounts r,
  /sys/fs/cgroup/ r,
  /sys/fs/cgroup/** rwkl,
  
  /sbin/openrc r,
  /bin/bash Cx -> shell,
  # All scripts from ALL runlevels must have profiles!
  /etc/init.d/* Pxr,
  /etc/conf.d/* r,
  
  /etc/rc.conf r,
  /etc/profile.env r,
  /etc/fstab r,
  /etc/{conf,init}.d/ r,
  /etc/runlevels/{,**} rw,
  /etc/terminfo/l/linux r,
  /etc/terminfo/x/xterm r,
  
  /var/log/rc.log w,
  /run/**{,.}pid rw,
  /run/openrc/** rwk,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/nameservice>
    
    capability sys_tty_config,
    capability dac_override,
    capability dac_read_search,
    
    /dev/tty rw,
    /dev/console rw,
    
    /bin/bash r,
    /lib{,32,64}/rc/sh/gendepends.sh Px,
    
  }
  
}


profile openrc.rc-service /sbin/rc-service flags=(complain) {
  #include <abstractions/base>
  
  /sbin/rc-service r,
  /etc/init.d/* Px,
  
  /run/openrc/scheduled/ r,
  
}


profile openrc.rc-update /sbin/rc-update flags=(complain) {
  #include <abstractions/base>
  
  /dev/pts/[0-9]* w,
  
  /sbin/rc-update r,
  
  /etc/init.d/ r,
  /etc/runlevels/{,**} rw,
  /etc/terminfo/x/xterm r,
  
  /run/openrc/** rw,
  
}


profile openrc.rc-status /bin/rc-status {
  #include <abstractions/base>
  
  capability kill,
  
  /dev/pts/[0-9]* w,
  @{PROC}/ r,
  @{PROC}/@{pid}/cmdline r,
  
  /bin/rc-status r,
  
  /etc/init.d/ r,
  /etc/conf.d/ r,
  /etc/runlevels/{,**} r,
  /etc/terminfo/x/xterm r,
  
  /run/openrc/** r,
  /run/{*.,*/,*/*.}pid r,
  
}


profile openrc.gendepends.sh /lib{,32,64}/rc/sh/gendepends.sh flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  
  capability sys_tty_config,
  capability dac_override,
  capability dac_read_search,
  
  /dev/tty rw,
  /dev/console rw,
  @{PROC}/@{pid}/mounts r,
  
  /bin/bash r,
  /lib{,32,64}/rc/sh/gendepends.sh r,
  /lib{,32,64}/rc/bin/shell_var ixr,
  /lib{,32,64}/rc/bin/service_started ixr,
  /lib{,32,64}/rc/bin/service_get_value ixr,
  /lib{,32,64}/rc/bin/fstabinfo ixr,
  /lib{,32,64}/rc/bin/eval_ecolors ix,
  /lib{,32,64}/rc/bin/mountinfo ix,
  /bin/sed ixr,
  /bin/grep ixr,
  /sbin/openrc Px,
  /usr/bin/gawk ixr,
  
  /etc/rc.conf r,
  /etc/fstab r,
  /etc/exports r,
  /etc/ssh/sshd_config r,
  /etc/zfs/zfs-functions r,
  /etc/{conf,init}.d/{,*} r,
  /etc/exports.d/{,*} r,
  /etc/terminfo/l/linux r,
  /etc/terminfo/x/xterm r,
  /usr/libexec/rc.apparmor.functions r,
  /run/openrc/options/lvm/need r,
  
}


profile openrc.netmount.init.d /etc/init.d/netmount flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  @{PROC}/@{pid}/mounts r,
  
  /bin/bash Cx -> shell,
  /bin/mount Px,
  /bin/umount Px,
  
  /etc/fstab r,
  /etc/{conf,init}.d/netmount r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.consolefont.init.d /etc/init.d/consolefont flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /dev/tty[0-9]* rw,
  /dev/pts/[0-9]* r,
  
  /usr/bin/setfont ix,
  /bin/bash Cx -> shell,
  
  / r,
  /etc/{conf,init}.d/consolefont r,
  /usr/share/consolefonts/{,**} r,
  /lib{,32,64}/rc/console/font rw,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    #include <abstractions/nameservice>
    
    capability sys_tty_config,
    
    /dev/console rw,
    
    /bin/gzip ix,
    /usr/share/consolefonts/{,**} r,
    
  }
  
}


profile openrc.local.init.d /etc/init.d/local flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  #include <local/openrc-local-scripts>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/local r,
  /etc/local.d/{,*} r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.hwclock.init.d /etc/init.d/hwclock flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /dev/ r,
  @{PROC}/devices r,
  
  /bin/bash Cx -> shell,
  /bin/uname ix,
  /bin/grep ix,
  /sbin/hwclock Px,
  
  /etc/{conf,init}.d/hwclock r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.swap.init.d /etc/init.d/swap flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  /bin/umount Px,
  /sbin/swapon Px,
  /sbin/swapoff Px,
  
  /etc/init.d/swap r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.modules.init.d /etc/init.d/modules flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /etc/init.d/root-ro Px,
  /bin/bash Cx -> shell,
  /bin/uname ix,
  /bin/kmod Px,
  
  /etc/{conf,init}.d/modules r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    #include <abstractions/nameservice>
    
  }
  
}


profile openrc.fsck.init.d /etc/init.d/fsck flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  /etc/init.d/* Px,
  /bin/cat ix,
  /sbin/fsck Px,
  
  /etc/{conf,init}.d/fsck r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.root.init.d /etc/init.d/root flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  @{PROC}/@{pid}/mounts r,
  
  /etc/init.d/mtab Px,
  /bin/rm ix,
  /bin/mount Px,
  /bin/bash Cx -> shell,
  
  /etc/fstab r,
  /etc/init.d/root r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.root-ro.init.d /etc/init.d/root-ro flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  capability chown,
  capability fsetid,
  capability fowner,
  
  /bin/bash Cx -> shell,
  /bin/cat ix,
  /bin/mkdir ix,
  /bin/sed ix,
  /bin/rm ix,
  /bin/mount Px,
  /usr/bin/rsync ix,
  
  /etc/init.d/root-ro r,
  /{etc,media,mnt}/ r,
  /{etc,media,mnt}/** rw,
  /lib{,32,64}/rc/{,**} r,
  /root/{,**} r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.mtab.init.d /etc/init.d/mtab flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/ln ix,
  /bin/bash Cx -> shell,
  
  /etc/mtab w,
  /etc/{conf,init}.d/mtab r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.localmount.init.d /etc/init.d/localmount flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  @{PROC}/@{pid}/mounts r,
  
  /bin/bash Cx -> shell,
  /etc/init.d/* Px,
  /bin/mount Px,
  /bin/umount Px,
  /bin/sed ix,
  /bin/sync ixr,
  /bin/fuser Px,
  /bin/sleep ix,
  /usr/bin/timeout ix,
  
  /etc/fstab r,
  /etc/{conf,init}.d/localmount r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.sysctl.init.d /etc/init.d/sysctl flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  /usr/sbin/sysctl Pxr,
  
  /etc/init.d/sysctl r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.bootmisc.init.d /etc/init.d/bootmisc flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  #include <abstractions/user-tmp>
  
  capability fsetid,
  capability syslog,
  capability chown,
  
  /dev/kmsg r,
  @{PROC}/@{pid}/mounts r,
  
  /bin/bash Cx -> shell,
  /bin/rm ix,
  /bin/readlink ix,
  /bin/mktemp ix,
  /bin/rmdir ix,
  /bin/chgrp ix,
  /bin/chmod ix,
  /bin/dmesg ix,
  /bin/mount Px,
  /bin/umount Px,
  /sbin/halt Px,
  
  /etc/fstab r,
  /etc/{conf,init}.d/bootmisc r,
  /lib{,32,64}/rc/console/{font,keymap,unicode} w,
  
  /var/log/dmesg w,
  /var/log/wtmp w,
  /run/utmp w,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.hostname.init.d /etc/init.d/hostname flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  capability sys_admin,
  
  /bin/bash Cx -> shell,
  /etc/init.d/syslog-ng Px,
  /bin/hostname ix,
  
  /etc/{conf,init}.d/hostname r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.tmpfiles.init.d /etc/init.d/tmpfiles.setup flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  capability chown,
  
  /bin/bash Cx -> shell,
  /lib{,32,64}/rc/sh/tmpfiles.sh ix,
  /bin/sort ix,
  /usr/bin/find ix,
  
  /etc/init.d/tmpfiles.setup r,
  /etc/conf.d/tmpfiles r,
  
  / r,
  /run/**/ rw,
  /run/tmpfiles.d/kmod.conf r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.termencoding.init.d /etc/init.d/termencoding flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /dev/tty[0-9]* w,
  
  /bin/bash Cx -> shell,
  /etc/init.d/keymaps Px,
  /etc/init.d/consolefont Px,
  
  /etc/init.d/termencoding r,
  
  /lib{,32,64}/rc/console/unicode w,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.swapfiles.init.d /etc/init.d/swapfiles flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  @{PROC}/swaps r,
  
  /bin/bash Cx -> shell,
  /sbin/swapon Px,
  /sbin/swapoff Px,
  
  /etc/init.d/swapfiles r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.keymaps.init.d /etc/init.d/keymaps flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /dev/tty[0-9]* rw,
  /dev/pts/[0-9]* r,
  
  /bin/bash Cxr -> shell,
  /usr/bin/kbd_mode ix,
  /usr/bin/loadkeys ix,
  /usr/bin/dumpkeys ix,
  
  / r,
  /etc/{conf,init}.d/keymaps r,
  /usr/share/keymaps/{,**} r,
  
  /lib{,32,64}/rc/console/keymap w,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    #include <abstractions/nameservice>
    
    capability sys_tty_config,
    
    /dev/console rw,
    
    /bin/gzip ix,
    
    /usr/share/keymaps/{,**} r,
    
  }
  
}


profile openrc.urandom.init.d /etc/init.d/urandom flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /dev/urandom w,
  @{PROC}/sys/kernel/random/poolsize r,
  
  /bin/bash Cx -> shell,
  /bin/cat ix,
  /bin/dd ix,
  /bin/rm ix,
  
  /etc/{conf,init}.d/urandom r,
  
  /var/lib/misc/random-seed rw,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.loopback.init.d /etc/init.d/loopback flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  capability net_admin,
  
  /bin/bash Cx -> shell,
  /bin/ip ix,
  
  /etc/init.d/loopback r,
  /etc/iproute2/rt_scopes r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.procfs.init.d /etc/init.d/procfs flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/procfs r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.killprocs.init.d /etc/init.d/killprocs flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/killprocs r,
  /sbin/killall5 Px,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    #include <abstractions/nameservice>
    
  }
  
}


profile openrc.mount-ro.init.d /etc/init.d/mount-ro flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/mount-ro r,
  /bin/sync Px,
  /bin/umount Px,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.savecache.init.d /etc/init.d/savecache flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/savecache r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.devfs.init.d /etc/init.d/devfs flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/devfs r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.dmesg.init.d /etc/init.d/dmesg flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/dmesg r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.kmod-static-nodes.init.d /etc/init.d/kmod-static-nodes flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/kmod-static-nodes r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.sysfs.init.d /etc/init.d/sysfs flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/sysfs r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.tmpfiles.dev.init.d /etc/init.d/tmpfiles.dev flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/tmpfiles.dev r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.udev.init.d /etc/init.d/udev flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/udev r,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}


profile openrc.modules-load.init.d /etc/init.d/modules-load flags=(complain) {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openrc>
  
  /bin/bash Cx -> shell,
  
  /etc/init.d/modules-load r,
  /bin/kmod Px,
  
  
  profile shell flags=(complain) {
    #include <abstractions/base>
    #include <abstractions/openrc_shell>
    
  }
  
}
