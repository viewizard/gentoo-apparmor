# ------------------------------------------------------------------
#
#  Copyright (C) 2016,2017 Mikhail Kurinnoi
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of version 2 of the GNU General Public
#  License published by the Free Software Foundation.
#
# ------------------------------------------------------------------

#include <tunables/global>

profile gvfs.gvfs-udisks2-volume-monitor /usr/libexec/gvfs-udisks2-volume-monitor {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/dbus-strict>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/udisks>
  #include <abstractions/dbus-pattern/session-bind>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  
  # UNIX -----------------------------------------------
  unix (send, receive, connect)
  	type=stream
  	addr=none
  	peer=(addr="@/dbus-vfs-daemon/socket-*" label="gvfs.gvfsd-burn"),
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=system
  	path="/org/freedesktop/UDisks2/**"
  	interface="org.freedesktop.UDisks2.*"
  	peer=(name=":[0-9]*.[0-9]*",label="udisks.udisksd"),
  dbus send
  	bus=system
  	path="/org/freedesktop/UDisks2"
  	interface="org.freedesktop.DBus.ObjectManager"
	member=GetManagedObjects
  	peer=(name=":[0-9]*.[0-9]*",label="udisks.udisksd"),
  dbus send
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/Private/RemoteVolumeMonitor"
  	interface="org.gtk.Private.RemoteVolumeMonitor"
  	peer=(name="{:[0-9]*.[0-9]*,org.freedesktop.DBus}"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  
  # PSEUDO ---------------------------------------------
  /sys/devices/virtual/block/@{BLOCK_VIRT}/{,*/}{name,uevent} r,
  /sys/devices/pci[0-9]*/**/{ata,usb}[0-9]*/**/block/@{BLOCK_REAL}/{,*/}uevent r,
  @{PROC}/@{pid}/fd/					r,
  @{PROC}/@{pid}/mounts					r,
  owner @{PROC}/@{pid}/mountinfo			r,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfs-udisks2-volume-monitor		mr,
  /bin/mount						Px,
  
  # READS/WRITES ---------------------------------------
  /etc/fstab						r,
  /etc/udev/udev.conf					r,
  /usr/share/mime/treemagic				r,
  /media/*/{,**/}					r,
  /run/udev/data/*					r,
  /run/mount/utab					r,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.local/share/mime/treemagic		r,
}

profile gvfs.gvfsd /usr/libexec/gvfsd {
  #include <abstractions/base>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name="{:[0-9]*.[0-9]*,org.freedesktop.DBus}"),
  dbus receive
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # PSEUDO ---------------------------------------------
  owner @{PROC}/@{pid}/fd/				rw,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd					mr,
  /usr/libexec/gvfsd-*					Px,
  
  # READS/WRITES ---------------------------------------
  /usr/share/gvfs/{,**}					r,
  /run/user/[0-9]*/gvfs/{,**}				rw,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.gvfs/					rw,
}

profile gvfs.gvfsd-archive /usr/libexec/gvfsd-archive flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-archive				mr,
}

profile gvfs.gvfsd-burn /usr/libexec/gvfsd-burn flags=(complain) {
  #include <abstractions/base>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-burn				mr,
}

profile gvfs.gvfsd-computer /usr/libexec/gvfsd-computer flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-computer				mr,
}

profile gvfs.gvfsd-dav /usr/libexec/gvfsd-dav flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-dav				mr,
}

profile gvfs.gvfsd-ftp /usr/libexec/gvfsd-ftp flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-ftp				mr,
}

profile gvfs.gvfsd-fuse /usr/libexec/gvfsd-fuse {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/dbus-session-strict>
  
  # CAPABILITIES ---------------------------------------
  capability dac_override,
  capability dac_read_search,
  capability sys_admin,
  
  # UNIX -----------------------------------------------
  unix (send, receive, connect)
  	type=stream
  	addr=none
  	peer=(addr="@/dbus-vfs-daemon/socket-*" label="gvfs.gvfsd-smb"),
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="gvfs.gvfsd-smb"),
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # MOUNT ----------------------------------------------
  mount options=(rw, nosuid, nodev) -> /run/user/[0-9]*/gvfs/,
  mount options=(rw, nosuid, nodev) -> /root/.gvfs/,
  umount /run/user/[0-9]*/gvfs/,
  umount /root/.gvfs/,
  
  # PSEUDO ---------------------------------------------
  /dev/fuse						rw,
  @{PROC}/@{pid}/mounts					r,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-fuse				mr,
  /usr/bin/fusermount					ixr,
  
  # READS/WRITES ---------------------------------------
  /etc/fuse.conf					r,
  /run/user/[0-9]*/gvfs/{,**}				rw,
  
  # USERS ----------------------------------------------
  @{HOME}/.gvfs/{,**}					rw,
}

profile gvfs.gvfsd-http /usr/libexec/gvfsd-http {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/dbus-strict>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  #include <abstractions/gtk>
  #include <abstractions/dconf>
  #include <abstractions/ssl-certs>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="gimp"),			# gimp
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-http				mr,
  
  # READS/WRITES ---------------------------------------
  /usr/lib{,32,64}/libproxy/[0-9]*.[0-9]*.[0-9]*/modules/*.so m,
  
  # READS/WRITES ---------------------------------------
  /usr/share/mime/mime.cache				r,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.local/share/mime/mime.cache		r,
}

profile gvfs.gvfsd-localtest /usr/libexec/gvfsd-localtest flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-localtest				mr,
}

profile gvfs.gvfsd-metadata /usr/libexec/gvfsd-metadata {
  #include <abstractions/base>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  
  # DBUS -----------------------------------------------
  dbus receive
  	bus=session
  	path="/org/gtk/vfs/metadata"
  	interface="org.gtk.vfs.Metadata"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-metadata				mr,
  
  # READS/WRITES ---------------------------------------
  /etc/udev/udev.conf					r,
  /sys/devices/virtual/block/@{BLOCK_VIRT}/{,*/}uevent	r,
  /sys/devices/pci[0-9]*/**/{ata,usb}[0-9]*/**/block/@{BLOCK_REAL}/{,*/}uevent r,
  /run/udev/data/*					r,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.local/share/gvfs-metadata/{,**}	rw,
}

profile gvfs.gvfsd-network /usr/libexec/gvfsd-network {
  #include <abstractions/base>
  #include <abstractions/dconf>
  #include <abstractions/gtk>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-network				mr,
}

profile gvfs.gvfsd-recent /usr/libexec/gvfsd-recent flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-recent				mr,
}

profile gvfs.gvfsd-sftp /usr/libexec/gvfsd-sftp flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-sftp				mr,
}

profile gvfs.gvfsd-smb /usr/libexec/gvfsd-smb {
  #include <abstractions/base>
  #include <abstractions/freedesktop.org>
  #include <abstractions/dconf>
  #include <abstractions/gtk>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  #include <abstractions/nameservice>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="gvfs.gvfsd-fuse"),
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="libreoffice.bin"),		# libreoffice
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="ristretto"),		# ristretto
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="tumbler"),			# tumbler
  unix (send, receive)
  			type=stream
  			addr=none
  			peer=(label="thunar"),			# thunar
  
# DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-smb				mr,
  
  # READS/WRITES ---------------------------------------
  /etc/samba/smb.conf					r,
  /usr/share/samba/codepages/**				r,
  /var/cache/samba/{,**}				r,
}

profile gvfs.gvfsd-smb-browse /usr/libexec/gvfsd-smb-browse {
  #include <abstractions/base>
  #include <abstractions/dconf>
  #include <abstractions/gtk>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  #include <abstractions/nameservice>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # NETWORK --------------------------------------------
  network netlink raw,
  network inet dgram,
  network inet6 dgram,
  network inet stream,
  network inet6 stream,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-smb-browse				mr,
  
  # READS/WRITES ---------------------------------------
  /etc/samba/smb.conf					r,
  /usr/share/samba/codepages/**				r,
  /var/cache/samba/{,**}				rw,
}

profile gvfs.gvfsd-trash /usr/libexec/gvfsd-trash {
  #include <abstractions/base>
  #include <abstractions/dbus-session-strict>
  #include <abstractions/dbus-pattern/session-bind>
  #include <abstractions/fs-access-by-pattern-filemanager>
  
  # UNIX -----------------------------------------------
  unix (bind, listen, send, receive, accept)
  			type=stream
  			addr="@/dbus-vfs-daemon/socket-*",
  unix (send, receive)
			type=stream
			addr=none
			peer=(label="tumbler"),			# tumbler
  
  # DBUS -----------------------------------------------
  dbus (send, receive)
  	bus=session
  	path="/org/gtk/vfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  dbus send
  	bus=session
  	path="/org/gtk/gvfs/**"
  	interface="org.gtk.vfs.*"
  	peer=(name=":[0-9]*.[0-9]*"),
  
  # PSEUDO ---------------------------------------------
  /sys/devices/virtual/block/@{BLOCK_VIRT}/{,*/}name	r,
  @{PROC}/@{pid}/mounts					r,
  owner @{PROC}/@{pid}/mountinfo			r,
  
  # EXECUTABLES ----------------------------------------
  /usr/libexec/gvfsd-trash				mr,
  
  # READS/WRITES ---------------------------------------
  /usr/share/mime/mime.cache				r,
  /run/mount/utab					r,
  
  # USERS ----------------------------------------------
  owner @{HOME}/.local/share/mime/mime.cache		r,
  owner @{HOME}/.local/share/Trash/{,**}		rw,
}

profile gvfs.gvfs-open /usr/bin/gvfs-open flags=(complain) {
  #include <abstractions/base>
  
  # EXECUTABLES ----------------------------------------
  /usr/bin/gvfs-open					mr,
}
